// Automatically generated by https://github.com/vlad902/mig-parser from
// xnu-3789.41.3 (OS X 10.12.3) source code.
enum __MIGDirection { IN, INOUT, OUT, SERVERAUDITTOKEN, REQUESTPORT, MSGOPTION };
struct {
  int idx;
  enum __MIGDirection direction;
  bool is_unlimited_size_array;
  const char *routine;
  const char *argument_name; 
} mig_routines[] = {
  { 0, IN, false, "atm_collect_trace_info", "atm_port" },
  { 1, IN, false, "atm_collect_trace_info", "activity_trace_id" },
  { 2, IN, false, "atm_collect_trace_info", "sub_activity_id" },
  { 3, IN, false, "atm_collect_trace_info", "flags" },
  { 4, IN, true, "atm_collect_trace_info", "memory_buffers" }, // VARIABLE_SIZE
  { 5, OUT, false, "atm_collect_trace_info", "memory_buffers_size" }, // Auto-generated
  { 6, IN, true, "atm_collect_trace_info", "buffer_sizes" }, // VARIABLE_SIZE
  { 7, OUT, false, "atm_collect_trace_info", "buffer_sizes_size" }, // Auto-generated
  { 0, IN, false, "atm_inspect_process_buffer", "atm_port" },
  { 1, IN, false, "atm_inspect_process_buffer", "proc_pid" },
  { 2, IN, false, "atm_inspect_process_buffer", "proc_uniqueid" },
  { 3, IN, false, "atm_inspect_process_buffer", "buffer_size" },
  { 4, IN, false, "atm_inspect_process_buffer", "trace_buffer" },
  { 0, IN, false, "io_object_get_class", "object" },
  { 1, OUT, false, "io_object_get_class", "className" },
  { 0, IN, false, "io_object_conforms_to", "object" },
  { 1, IN, false, "io_object_conforms_to", "className" },
  { 2, OUT, false, "io_object_conforms_to", "conforms" },
  { 0, IN, false, "io_iterator_next", "iterator" },
  { 1, OUT, false, "io_iterator_next", "object" },
  { 0, IN, false, "io_iterator_reset", "iterator" },
  { 0, IN, false, "io_service_get_matching_services", "master_port" },
  { 1, IN, false, "io_service_get_matching_services", "matching" },
  { 2, OUT, false, "io_service_get_matching_services", "existing" },
  { 0, IN, false, "io_registry_entry_get_property", "registry_entry" },
  { 1, IN, false, "io_registry_entry_get_property", "property_name" },
  { 2, OUT, true, "io_registry_entry_get_property", "properties" }, // physicalcopy // UNLIMITED_SIZE
  { 3, OUT, false, "io_registry_entry_get_property", "properties_size" }, // Auto-generated
  { 0, IN, false, "io_registry_create_iterator", "master_port" },
  { 1, IN, false, "io_registry_create_iterator", "plane" },
  { 2, IN, false, "io_registry_create_iterator", "options" },
  { 3, OUT, false, "io_registry_create_iterator", "iterator" },
  { 0, IN, false, "io_registry_iterator_enter_entry", "iterator" },
  { 0, IN, false, "io_registry_iterator_exit_entry", "iterator" },
  { 0, IN, false, "io_registry_entry_from_path", "master_port" },
  { 1, IN, false, "io_registry_entry_from_path", "path" },
  { 2, OUT, false, "io_registry_entry_from_path", "registry_entry" },
  { 0, IN, false, "io_registry_entry_get_name", "registry_entry" },
  { 1, OUT, false, "io_registry_entry_get_name", "name" },
  { 0, IN, false, "io_registry_entry_get_properties", "registry_entry" },
  { 1, OUT, true, "io_registry_entry_get_properties", "properties" }, // physicalcopy // UNLIMITED_SIZE
  { 2, OUT, false, "io_registry_entry_get_properties", "properties_size" }, // Auto-generated
  { 0, IN, false, "io_registry_entry_get_property_bytes", "registry_entry" },
  { 1, IN, false, "io_registry_entry_get_property_bytes", "property_name" },
  { 2, OUT, true, "io_registry_entry_get_property_bytes", "data" }, // CountInOut // VARIABLE_SIZE
  { 3, INOUT, false, "io_registry_entry_get_property_bytes", "data_size" }, // Auto-generated
  { 0, IN, false, "io_registry_entry_get_child_iterator", "registry_entry" },
  { 1, IN, false, "io_registry_entry_get_child_iterator", "plane" },
  { 2, OUT, false, "io_registry_entry_get_child_iterator", "iterator" },
  { 0, IN, false, "io_registry_entry_get_parent_iterator", "registry_entry" },
  { 1, IN, false, "io_registry_entry_get_parent_iterator", "plane" },
  { 2, OUT, false, "io_registry_entry_get_parent_iterator", "iterator" },
  { 0, IN, false, "io_service_close", "connection" },
  { 0, IN, false, "io_connect_get_service", "connection" },
  { 1, OUT, false, "io_connect_get_service", "service" },
  { 0, IN, false, "io_connect_add_client", "connection" },
  { 1, IN, false, "io_connect_add_client", "connect_to" },
  { 0, IN, false, "io_connect_set_properties", "connection" },
  { 1, IN, true, "io_connect_set_properties", "properties" }, // physicalcopy // UNLIMITED_SIZE
  { 2, OUT, false, "io_connect_set_properties", "properties_size" }, // Auto-generated
  { 3, OUT, false, "io_connect_set_properties", "result" },
  { 0, IN, false, "io_registry_entry_get_path", "registry_entry" },
  { 1, IN, false, "io_registry_entry_get_path", "plane" },
  { 2, OUT, false, "io_registry_entry_get_path", "path" },
  { 0, IN, false, "io_registry_get_root_entry", "master_port" },
  { 1, OUT, false, "io_registry_get_root_entry", "root" },
  { 0, IN, false, "io_registry_entry_set_properties", "registry_entry" },
  { 1, IN, true, "io_registry_entry_set_properties", "properties" }, // physicalcopy // UNLIMITED_SIZE
  { 2, OUT, false, "io_registry_entry_set_properties", "properties_size" }, // Auto-generated
  { 3, OUT, false, "io_registry_entry_set_properties", "result" },
  { 0, IN, false, "io_registry_entry_in_plane", "registry_entry" },
  { 1, IN, false, "io_registry_entry_in_plane", "plane" },
  { 2, OUT, false, "io_registry_entry_in_plane", "inPlane" },
  { 0, IN, false, "io_object_get_retain_count", "object" },
  { 1, OUT, false, "io_object_get_retain_count", "retainCount" },
  { 0, IN, false, "io_service_get_busy_state", "service" },
  { 1, OUT, false, "io_service_get_busy_state", "busyState" },
  { 0, IN, false, "io_service_wait_quiet", "service" },
  { 1, IN, false, "io_service_wait_quiet", "wait_time" },
  { 0, IN, false, "io_registry_entry_create_iterator", "registry_entry" },
  { 1, IN, false, "io_registry_entry_create_iterator", "plane" },
  { 2, IN, false, "io_registry_entry_create_iterator", "options" },
  { 3, OUT, false, "io_registry_entry_create_iterator", "iterator" },
  { 0, IN, false, "io_iterator_is_valid", "iterator" },
  { 1, OUT, false, "io_iterator_is_valid", "is_valid" },
  { 0, IN, false, "io_catalog_send_data", "master_port" },
  { 1, IN, false, "io_catalog_send_data", "flag" },
  { 2, IN, true, "io_catalog_send_data", "inData" }, // UNLIMITED_SIZE
  { 3, OUT, false, "io_catalog_send_data", "inData_size" }, // Auto-generated
  { 4, OUT, false, "io_catalog_send_data", "result" },
  { 0, IN, false, "io_catalog_terminate", "master_port" },
  { 1, IN, false, "io_catalog_terminate", "flag" },
  { 2, IN, false, "io_catalog_terminate", "name" },
  { 0, IN, false, "io_catalog_get_data", "master_port" },
  { 1, IN, false, "io_catalog_get_data", "flag" },
  { 2, OUT, true, "io_catalog_get_data", "outData" }, // UNLIMITED_SIZE
  { 3, OUT, false, "io_catalog_get_data", "outData_size" }, // Auto-generated
  { 0, IN, false, "io_catalog_get_gen_count", "master_port" },
  { 1, OUT, false, "io_catalog_get_gen_count", "genCount" },
  { 0, IN, false, "io_catalog_module_loaded", "master_port" },
  { 1, IN, false, "io_catalog_module_loaded", "name" },
  { 0, IN, false, "io_catalog_reset", "master_port" },
  { 1, IN, false, "io_catalog_reset", "flag" },
  { 0, IN, false, "io_service_request_probe", "service" },
  { 1, IN, false, "io_service_request_probe", "options" },
  { 0, IN, false, "io_registry_entry_get_name_in_plane", "registry_entry" },
  { 1, IN, false, "io_registry_entry_get_name_in_plane", "plane" },
  { 2, OUT, false, "io_registry_entry_get_name_in_plane", "name" },
  { 0, IN, false, "io_service_match_property_table", "service" },
  { 1, IN, false, "io_service_match_property_table", "matching" },
  { 2, OUT, false, "io_service_match_property_table", "matches" },
  { 0, IN, false, "io_connect_get_notification_semaphore", "connection" },
  { 1, IN, false, "io_connect_get_notification_semaphore", "notification_type" },
  { 2, OUT, false, "io_connect_get_notification_semaphore", "semaphore" },
  { 0, IN, false, "io_registry_entry_get_location_in_plane", "registry_entry" },
  { 1, IN, false, "io_registry_entry_get_location_in_plane", "plane" },
  { 2, OUT, false, "io_registry_entry_get_location_in_plane", "location" },
  { 0, IN, false, "io_registry_entry_get_property_recursively", "registry_entry" },
  { 1, IN, false, "io_registry_entry_get_property_recursively", "plane" },
  { 2, IN, false, "io_registry_entry_get_property_recursively", "property_name" },
  { 3, IN, false, "io_registry_entry_get_property_recursively", "options" },
  { 4, OUT, true, "io_registry_entry_get_property_recursively", "properties" }, // physicalcopy // UNLIMITED_SIZE
  { 5, OUT, false, "io_registry_entry_get_property_recursively", "properties_size" }, // Auto-generated
  { 0, IN, false, "io_service_get_state", "service" },
  { 1, OUT, false, "io_service_get_state", "state" },
  { 2, OUT, false, "io_service_get_state", "busy_state" },
  { 3, OUT, false, "io_service_get_state", "accumulated_busy_time" },
  { 0, IN, false, "io_service_get_matching_services_ool", "master_port" },
  { 1, IN, true, "io_service_get_matching_services_ool", "matching" }, // physicalcopy // UNLIMITED_SIZE
  { 2, OUT, false, "io_service_get_matching_services_ool", "matching_size" }, // Auto-generated
  { 3, OUT, false, "io_service_get_matching_services_ool", "result" },
  { 4, OUT, false, "io_service_get_matching_services_ool", "existing" },
  { 0, IN, false, "io_service_match_property_table_ool", "service" },
  { 1, IN, true, "io_service_match_property_table_ool", "matching" }, // physicalcopy // UNLIMITED_SIZE
  { 2, OUT, false, "io_service_match_property_table_ool", "matching_size" }, // Auto-generated
  { 3, OUT, false, "io_service_match_property_table_ool", "result" },
  { 4, OUT, false, "io_service_match_property_table_ool", "matches" },
  { 0, IN, false, "io_object_get_superclass", "master_port" },
  { 1, IN, false, "io_object_get_superclass", "obj_name" },
  { 2, OUT, false, "io_object_get_superclass", "class_name" },
  { 0, IN, false, "io_object_get_bundle_identifier", "master_port" },
  { 1, IN, false, "io_object_get_bundle_identifier", "obj_name" },
  { 2, OUT, false, "io_object_get_bundle_identifier", "class_name" },
  { 0, IN, false, "io_service_open_extended", "service" },
  { 1, IN, false, "io_service_open_extended", "owningTask" },
  { 2, IN, false, "io_service_open_extended", "connect_type" },
  { 3, IN, false, "io_service_open_extended", "ndr" },
  { 4, IN, true, "io_service_open_extended", "properties" }, // physicalcopy // UNLIMITED_SIZE
  { 5, OUT, false, "io_service_open_extended", "properties_size" }, // Auto-generated
  { 6, OUT, false, "io_service_open_extended", "result" },
  { 7, OUT, false, "io_service_open_extended", "connection" },
  { 0, IN, false, "io_connect_map_memory_into_task", "connection" },
  { 1, IN, false, "io_connect_map_memory_into_task", "memory_type" },
  { 2, IN, false, "io_connect_map_memory_into_task", "into_task" },
  { 3, INOUT, false, "io_connect_map_memory_into_task", "address" },
  { 4, INOUT, false, "io_connect_map_memory_into_task", "size" },
  { 5, IN, false, "io_connect_map_memory_into_task", "flags" },
  { 0, IN, false, "io_connect_unmap_memory_from_task", "connection" },
  { 1, IN, false, "io_connect_unmap_memory_from_task", "memory_type" },
  { 2, IN, false, "io_connect_unmap_memory_from_task", "from_task" },
  { 3, IN, false, "io_connect_unmap_memory_from_task", "address" },
  { 0, IN, false, "io_connect_method", "connection" },
  { 1, IN, false, "io_connect_method", "selector" },
  { 2, IN, true, "io_connect_method", "scalar_input" }, // VARIABLE_SIZE
  { 3, OUT, false, "io_connect_method", "scalar_input_size" }, // Auto-generated
  { 4, IN, true, "io_connect_method", "inband_input" }, // VARIABLE_SIZE
  { 5, OUT, false, "io_connect_method", "inband_input_size" }, // Auto-generated
  { 6, IN, false, "io_connect_method", "ool_input" },
  { 7, IN, false, "io_connect_method", "ool_input_size" },
  { 8, OUT, true, "io_connect_method", "inband_output" }, // CountInOut // VARIABLE_SIZE
  { 9, INOUT, false, "io_connect_method", "inband_output_size" }, // Auto-generated
  { 10, OUT, true, "io_connect_method", "scalar_output" }, // CountInOut // VARIABLE_SIZE
  { 11, INOUT, false, "io_connect_method", "scalar_output_size" }, // Auto-generated
  { 12, IN, false, "io_connect_method", "ool_output" },
  { 13, INOUT, false, "io_connect_method", "ool_output_size" },
  { 0, IN, false, "io_connect_async_method", "connection" },
  { 1, IN, false, "io_connect_async_method", "wake_port" },
  { 2, IN, true, "io_connect_async_method", "reference" }, // VARIABLE_SIZE
  { 3, OUT, false, "io_connect_async_method", "reference_size" }, // Auto-generated
  { 4, IN, false, "io_connect_async_method", "selector" },
  { 5, IN, true, "io_connect_async_method", "scalar_input" }, // VARIABLE_SIZE
  { 6, OUT, false, "io_connect_async_method", "scalar_input_size" }, // Auto-generated
  { 7, IN, true, "io_connect_async_method", "inband_input" }, // VARIABLE_SIZE
  { 8, OUT, false, "io_connect_async_method", "inband_input_size" }, // Auto-generated
  { 9, IN, false, "io_connect_async_method", "ool_input" },
  { 10, IN, false, "io_connect_async_method", "ool_input_size" },
  { 11, OUT, true, "io_connect_async_method", "inband_output" }, // CountInOut // VARIABLE_SIZE
  { 12, INOUT, false, "io_connect_async_method", "inband_output_size" }, // Auto-generated
  { 13, OUT, true, "io_connect_async_method", "scalar_output" }, // CountInOut // VARIABLE_SIZE
  { 14, INOUT, false, "io_connect_async_method", "scalar_output_size" }, // Auto-generated
  { 15, IN, false, "io_connect_async_method", "ool_output" },
  { 16, INOUT, false, "io_connect_async_method", "ool_output_size" },
  { 0, IN, false, "io_connect_set_notification_port", "connection" },
  { 1, IN, false, "io_connect_set_notification_port", "notification_type" },
  { 2, IN, false, "io_connect_set_notification_port", "port" },
  { 3, IN, false, "io_connect_set_notification_port", "reference" },
  { 0, IN, false, "io_service_add_notification", "master_port" },
  { 1, IN, false, "io_service_add_notification", "notification_type" },
  { 2, IN, false, "io_service_add_notification", "matching" },
  { 3, IN, false, "io_service_add_notification", "wake_port" },
  { 4, IN, true, "io_service_add_notification", "reference" }, // VARIABLE_SIZE
  { 5, OUT, false, "io_service_add_notification", "reference_size" }, // Auto-generated
  { 6, OUT, false, "io_service_add_notification", "notification" },
  { 0, IN, false, "io_service_add_interest_notification", "service" },
  { 1, IN, false, "io_service_add_interest_notification", "type_of_interest" },
  { 2, IN, false, "io_service_add_interest_notification", "wake_port" },
  { 3, IN, true, "io_service_add_interest_notification", "reference" }, // VARIABLE_SIZE
  { 4, OUT, false, "io_service_add_interest_notification", "reference_size" }, // Auto-generated
  { 5, OUT, false, "io_service_add_interest_notification", "notification" },
  { 0, IN, false, "io_service_add_notification_ool", "master_port" },
  { 1, IN, false, "io_service_add_notification_ool", "notification_type" },
  { 2, IN, true, "io_service_add_notification_ool", "matching" }, // physicalcopy // UNLIMITED_SIZE
  { 3, OUT, false, "io_service_add_notification_ool", "matching_size" }, // Auto-generated
  { 4, IN, false, "io_service_add_notification_ool", "wake_port" },
  { 5, IN, true, "io_service_add_notification_ool", "reference" }, // VARIABLE_SIZE
  { 6, OUT, false, "io_service_add_notification_ool", "reference_size" }, // Auto-generated
  { 7, OUT, false, "io_service_add_notification_ool", "result" },
  { 8, OUT, false, "io_service_add_notification_ool", "notification" },
  { 0, IN, false, "io_registry_entry_get_registry_entry_id", "registry_entry" },
  { 1, OUT, false, "io_registry_entry_get_registry_entry_id", "entry_id" },
  { 0, IN, false, "io_connect_method_var_output", "connection" },
  { 1, IN, false, "io_connect_method_var_output", "selector" },
  { 2, IN, true, "io_connect_method_var_output", "scalar_input" }, // VARIABLE_SIZE
  { 3, OUT, false, "io_connect_method_var_output", "scalar_input_size" }, // Auto-generated
  { 4, IN, true, "io_connect_method_var_output", "inband_input" }, // VARIABLE_SIZE
  { 5, OUT, false, "io_connect_method_var_output", "inband_input_size" }, // Auto-generated
  { 6, IN, false, "io_connect_method_var_output", "ool_input" },
  { 7, IN, false, "io_connect_method_var_output", "ool_input_size" },
  { 8, OUT, true, "io_connect_method_var_output", "inband_output" }, // CountInOut // VARIABLE_SIZE
  { 9, INOUT, false, "io_connect_method_var_output", "inband_output_size" }, // Auto-generated
  { 10, OUT, true, "io_connect_method_var_output", "scalar_output" }, // CountInOut // VARIABLE_SIZE
  { 11, INOUT, false, "io_connect_method_var_output", "scalar_output_size" }, // Auto-generated
  { 12, OUT, true, "io_connect_method_var_output", "var_output" }, // physicalcopy // UNLIMITED_SIZE
  { 13, OUT, false, "io_connect_method_var_output", "var_output_size" }, // Auto-generated
  { 0, IN, false, "io_service_get_matching_service", "master_port" },
  { 1, IN, false, "io_service_get_matching_service", "matching" },
  { 2, OUT, false, "io_service_get_matching_service", "service" },
  { 0, IN, false, "io_service_get_matching_service_ool", "master_port" },
  { 1, IN, true, "io_service_get_matching_service_ool", "matching" }, // physicalcopy // UNLIMITED_SIZE
  { 2, OUT, false, "io_service_get_matching_service_ool", "matching_size" }, // Auto-generated
  { 3, OUT, false, "io_service_get_matching_service_ool", "result" },
  { 4, OUT, false, "io_service_get_matching_service_ool", "service" },
  { 0, IN, false, "io_service_get_authorization_id", "service" },
  { 1, OUT, false, "io_service_get_authorization_id", "authorization_id" },
  { 0, IN, false, "io_service_set_authorization_id", "service" },
  { 1, IN, false, "io_service_set_authorization_id", "authorization_id" },
  { 0, IN, false, "io_server_version", "master_port" },
  { 1, OUT, false, "io_server_version", "version" },
  { 0, IN, false, "io_registry_entry_get_properties_bin", "registry_entry" },
  { 1, OUT, true, "io_registry_entry_get_properties_bin", "properties" }, // physicalcopy // UNLIMITED_SIZE
  { 2, OUT, false, "io_registry_entry_get_properties_bin", "properties_size" }, // Auto-generated
  { 0, IN, false, "io_registry_entry_get_property_bin", "registry_entry" },
  { 1, IN, false, "io_registry_entry_get_property_bin", "plane" },
  { 2, IN, false, "io_registry_entry_get_property_bin", "property_name" },
  { 3, IN, false, "io_registry_entry_get_property_bin", "options" },
  { 4, OUT, true, "io_registry_entry_get_property_bin", "properties" }, // physicalcopy // UNLIMITED_SIZE
  { 5, OUT, false, "io_registry_entry_get_property_bin", "properties_size" }, // Auto-generated
  { 0, IN, false, "io_service_get_matching_service_bin", "master_port" },
  { 1, IN, true, "io_service_get_matching_service_bin", "matching" }, // VARIABLE_SIZE
  { 2, OUT, false, "io_service_get_matching_service_bin", "matching_size" }, // Auto-generated
  { 3, OUT, false, "io_service_get_matching_service_bin", "service" },
  { 0, IN, false, "io_service_get_matching_services_bin", "master_port" },
  { 1, IN, true, "io_service_get_matching_services_bin", "matching" }, // VARIABLE_SIZE
  { 2, OUT, false, "io_service_get_matching_services_bin", "matching_size" }, // Auto-generated
  { 3, OUT, false, "io_service_get_matching_services_bin", "existing" },
  { 0, IN, false, "io_service_match_property_table_bin", "service" },
  { 1, IN, true, "io_service_match_property_table_bin", "matching" }, // VARIABLE_SIZE
  { 2, OUT, false, "io_service_match_property_table_bin", "matching_size" }, // Auto-generated
  { 3, OUT, false, "io_service_match_property_table_bin", "matches" },
  { 0, IN, false, "io_service_add_notification_bin", "master_port" },
  { 1, IN, false, "io_service_add_notification_bin", "notification_type" },
  { 2, IN, true, "io_service_add_notification_bin", "matching" }, // VARIABLE_SIZE
  { 3, OUT, false, "io_service_add_notification_bin", "matching_size" }, // Auto-generated
  { 4, IN, false, "io_service_add_notification_bin", "wake_port" },
  { 5, IN, true, "io_service_add_notification_bin", "reference" }, // VARIABLE_SIZE
  { 6, OUT, false, "io_service_add_notification_bin", "reference_size" }, // Auto-generated
  { 7, OUT, false, "io_service_add_notification_bin", "notification" },
  { 0, IN, false, "io_registry_entry_get_path_ool", "registry_entry" },
  { 1, IN, false, "io_registry_entry_get_path_ool", "plane" },
  { 2, OUT, false, "io_registry_entry_get_path_ool", "path" },
  { 3, OUT, true, "io_registry_entry_get_path_ool", "path_ool" }, // physicalcopy // UNLIMITED_SIZE
  { 4, OUT, false, "io_registry_entry_get_path_ool", "path_ool_size" }, // Auto-generated
  { 0, IN, false, "io_registry_entry_from_path_ool", "master_port" },
  { 1, IN, false, "io_registry_entry_from_path_ool", "path" },
  { 2, IN, true, "io_registry_entry_from_path_ool", "path_ool" }, // physicalcopy // UNLIMITED_SIZE
  { 3, OUT, false, "io_registry_entry_from_path_ool", "path_ool_size" }, // Auto-generated
  { 4, OUT, false, "io_registry_entry_from_path_ool", "result" },
  { 5, OUT, false, "io_registry_entry_from_path_ool", "registry_entry" },
  { 0, IN, false, "mach_gss_init_sec_context", "server" },
  { 1, IN, false, "mach_gss_init_sec_context", "mech" },
  { 2, IN, true, "mach_gss_init_sec_context", "intoken" }, // UNLIMITED_SIZE
  { 3, OUT, false, "mach_gss_init_sec_context", "intoken_size" }, // Auto-generated
  { 4, IN, false, "mach_gss_init_sec_context", "uid" },
  { 5, IN, false, "mach_gss_init_sec_context", "princ_namestr" },
  { 6, IN, false, "mach_gss_init_sec_context", "svc_namestr" },
  { 7, IN, false, "mach_gss_init_sec_context", "flags" },
  { 8, IN, false, "mach_gss_init_sec_context", "gssd_flags" },
  { 9, INOUT, false, "mach_gss_init_sec_context", "context" },
  { 10, INOUT, false, "mach_gss_init_sec_context", "cred_handle" },
  { 11, SERVERAUDITTOKEN, false, "mach_gss_init_sec_context", "atoken" },
  { 12, OUT, false, "mach_gss_init_sec_context", "ret_flags" },
  { 13, OUT, true, "mach_gss_init_sec_context", "key" }, // dealloc // UNLIMITED_SIZE
  { 14, OUT, false, "mach_gss_init_sec_context", "key_size" }, // Auto-generated
  { 15, OUT, true, "mach_gss_init_sec_context", "outtoken" }, // dealloc // UNLIMITED_SIZE
  { 16, OUT, false, "mach_gss_init_sec_context", "outtoken_size" }, // Auto-generated
  { 17, OUT, false, "mach_gss_init_sec_context", "major_stat" },
  { 18, OUT, false, "mach_gss_init_sec_context", "minor_stat" },
  { 0, IN, false, "mach_gss_accept_sec_context", "server" },
  { 1, IN, true, "mach_gss_accept_sec_context", "intoken" }, // UNLIMITED_SIZE
  { 2, OUT, false, "mach_gss_accept_sec_context", "intoken_size" }, // Auto-generated
  { 3, IN, false, "mach_gss_accept_sec_context", "svc_namestr" },
  { 4, IN, false, "mach_gss_accept_sec_context", "gssd_flags" },
  { 5, INOUT, false, "mach_gss_accept_sec_context", "context" },
  { 6, INOUT, false, "mach_gss_accept_sec_context", "cred_handle" },
  { 7, SERVERAUDITTOKEN, false, "mach_gss_accept_sec_context", "atoken" },
  { 8, OUT, false, "mach_gss_accept_sec_context", "flags" },
  { 9, OUT, false, "mach_gss_accept_sec_context", "uid" },
  { 10, OUT, true, "mach_gss_accept_sec_context", "gids" }, // VARIABLE_SIZE
  { 11, OUT, false, "mach_gss_accept_sec_context", "gids_size" }, // Auto-generated
  { 12, OUT, true, "mach_gss_accept_sec_context", "key" }, // dealloc // UNLIMITED_SIZE
  { 13, OUT, false, "mach_gss_accept_sec_context", "key_size" }, // Auto-generated
  { 14, OUT, true, "mach_gss_accept_sec_context", "outtoken" }, // dealloc // UNLIMITED_SIZE
  { 15, OUT, false, "mach_gss_accept_sec_context", "outtoken_size" }, // Auto-generated
  { 16, OUT, false, "mach_gss_accept_sec_context", "major_stat" },
  { 17, OUT, false, "mach_gss_accept_sec_context", "minor_stat" },
  { 0, IN, false, "mach_gss_log_error", "server" },
  { 1, IN, false, "mach_gss_log_error", "mnt" },
  { 2, IN, false, "mach_gss_log_error", "uid" },
  { 3, IN, false, "mach_gss_log_error", "source" },
  { 4, IN, false, "mach_gss_log_error", "major_stat" },
  { 5, IN, false, "mach_gss_log_error", "minor_stat" },
  { 6, SERVERAUDITTOKEN, false, "mach_gss_log_error", "atoken" },
  { 0, IN, false, "mach_gss_init_sec_context_v2", "server" },
  { 1, IN, false, "mach_gss_init_sec_context_v2", "mech" },
  { 2, IN, true, "mach_gss_init_sec_context_v2", "intoken" }, // UNLIMITED_SIZE
  { 3, OUT, false, "mach_gss_init_sec_context_v2", "intoken_size" }, // Auto-generated
  { 4, IN, false, "mach_gss_init_sec_context_v2", "uid" },
  { 5, IN, false, "mach_gss_init_sec_context_v2", "clnt_nt" },
  { 6, IN, true, "mach_gss_init_sec_context_v2", "clnt_princ" }, // UNLIMITED_SIZE
  { 7, OUT, false, "mach_gss_init_sec_context_v2", "clnt_princ_size" }, // Auto-generated
  { 8, IN, false, "mach_gss_init_sec_context_v2", "svc_nt" },
  { 9, IN, true, "mach_gss_init_sec_context_v2", "svc_princ" }, // UNLIMITED_SIZE
  { 10, OUT, false, "mach_gss_init_sec_context_v2", "svc_princ_size" }, // Auto-generated
  { 11, IN, false, "mach_gss_init_sec_context_v2", "flags" },
  { 12, INOUT, false, "mach_gss_init_sec_context_v2", "gssd_flags" },
  { 13, INOUT, false, "mach_gss_init_sec_context_v2", "context" },
  { 14, INOUT, false, "mach_gss_init_sec_context_v2", "cred_handle" },
  { 15, SERVERAUDITTOKEN, false, "mach_gss_init_sec_context_v2", "atoken" },
  { 16, OUT, false, "mach_gss_init_sec_context_v2", "ret_flags" },
  { 17, OUT, true, "mach_gss_init_sec_context_v2", "key" }, // dealloc // UNLIMITED_SIZE
  { 18, OUT, false, "mach_gss_init_sec_context_v2", "key_size" }, // Auto-generated
  { 19, OUT, true, "mach_gss_init_sec_context_v2", "outtoken" }, // dealloc // UNLIMITED_SIZE
  { 20, OUT, false, "mach_gss_init_sec_context_v2", "outtoken_size" }, // Auto-generated
  { 21, OUT, false, "mach_gss_init_sec_context_v2", "displayname" },
  { 22, OUT, false, "mach_gss_init_sec_context_v2", "major_stat" },
  { 23, OUT, false, "mach_gss_init_sec_context_v2", "minor_stat" },
  { 0, IN, false, "mach_gss_accept_sec_context_v2", "server" },
  { 1, IN, true, "mach_gss_accept_sec_context_v2", "intoken" }, // UNLIMITED_SIZE
  { 2, OUT, false, "mach_gss_accept_sec_context_v2", "intoken_size" }, // Auto-generated
  { 3, IN, false, "mach_gss_accept_sec_context_v2", "svc_nt" },
  { 4, IN, true, "mach_gss_accept_sec_context_v2", "svc_princ" }, // UNLIMITED_SIZE
  { 5, OUT, false, "mach_gss_accept_sec_context_v2", "svc_princ_size" }, // Auto-generated
  { 6, INOUT, false, "mach_gss_accept_sec_context_v2", "gssd_flags" },
  { 7, INOUT, false, "mach_gss_accept_sec_context_v2", "context" },
  { 8, INOUT, false, "mach_gss_accept_sec_context_v2", "cred_handle" },
  { 9, SERVERAUDITTOKEN, false, "mach_gss_accept_sec_context_v2", "atoken" },
  { 10, OUT, false, "mach_gss_accept_sec_context_v2", "flags" },
  { 11, OUT, false, "mach_gss_accept_sec_context_v2", "uid" },
  { 12, OUT, true, "mach_gss_accept_sec_context_v2", "gids" }, // VARIABLE_SIZE
  { 13, OUT, false, "mach_gss_accept_sec_context_v2", "gids_size" }, // Auto-generated
  { 14, OUT, true, "mach_gss_accept_sec_context_v2", "key" }, // dealloc // UNLIMITED_SIZE
  { 15, OUT, false, "mach_gss_accept_sec_context_v2", "key_size" }, // Auto-generated
  { 16, OUT, true, "mach_gss_accept_sec_context_v2", "outtoken" }, // dealloc // UNLIMITED_SIZE
  { 17, OUT, false, "mach_gss_accept_sec_context_v2", "outtoken_size" }, // Auto-generated
  { 18, OUT, false, "mach_gss_accept_sec_context_v2", "major_stat" },
  { 19, OUT, false, "mach_gss_accept_sec_context_v2", "minor_stat" },
  { 0, IN, false, "mach_gss_init_sec_context_v3", "server" },
  { 1, IN, false, "mach_gss_init_sec_context_v3", "mech" },
  { 2, IN, true, "mach_gss_init_sec_context_v3", "intoken" }, // UNLIMITED_SIZE
  { 3, OUT, false, "mach_gss_init_sec_context_v3", "intoken_size" }, // Auto-generated
  { 4, IN, false, "mach_gss_init_sec_context_v3", "uid" },
  { 5, IN, false, "mach_gss_init_sec_context_v3", "clnt_nt" },
  { 6, IN, true, "mach_gss_init_sec_context_v3", "clnt_princ" }, // UNLIMITED_SIZE
  { 7, OUT, false, "mach_gss_init_sec_context_v3", "clnt_princ_size" }, // Auto-generated
  { 8, IN, false, "mach_gss_init_sec_context_v3", "svc_nt" },
  { 9, IN, true, "mach_gss_init_sec_context_v3", "svc_princ" }, // UNLIMITED_SIZE
  { 10, OUT, false, "mach_gss_init_sec_context_v3", "svc_princ_size" }, // Auto-generated
  { 11, IN, false, "mach_gss_init_sec_context_v3", "flags" },
  { 12, IN, true, "mach_gss_init_sec_context_v3", "etypes" }, // VARIABLE_SIZE
  { 13, OUT, false, "mach_gss_init_sec_context_v3", "etypes_size" }, // Auto-generated
  { 14, INOUT, false, "mach_gss_init_sec_context_v3", "gssd_flags" },
  { 15, INOUT, false, "mach_gss_init_sec_context_v3", "context" },
  { 16, INOUT, false, "mach_gss_init_sec_context_v3", "cred_handle" },
  { 17, SERVERAUDITTOKEN, false, "mach_gss_init_sec_context_v3", "atoken" },
  { 18, OUT, false, "mach_gss_init_sec_context_v3", "ret_flags" },
  { 19, OUT, true, "mach_gss_init_sec_context_v3", "key" }, // dealloc // UNLIMITED_SIZE
  { 20, OUT, false, "mach_gss_init_sec_context_v3", "key_size" }, // Auto-generated
  { 21, OUT, true, "mach_gss_init_sec_context_v3", "outtoken" }, // dealloc // UNLIMITED_SIZE
  { 22, OUT, false, "mach_gss_init_sec_context_v3", "outtoken_size" }, // Auto-generated
  { 23, OUT, false, "mach_gss_init_sec_context_v3", "displayname" },
  { 24, OUT, false, "mach_gss_init_sec_context_v3", "major_stat" },
  { 25, OUT, false, "mach_gss_init_sec_context_v3", "minor_stat" },
  { 0, IN, false, "mach_gss_hold_cred", "server" },
  { 1, IN, false, "mach_gss_hold_cred", "mech" },
  { 2, IN, false, "mach_gss_hold_cred", "nt" },
  { 3, IN, true, "mach_gss_hold_cred", "princ" }, // UNLIMITED_SIZE
  { 4, OUT, false, "mach_gss_hold_cred", "princ_size" }, // Auto-generated
  { 5, SERVERAUDITTOKEN, false, "mach_gss_hold_cred", "atoken" },
  { 6, OUT, false, "mach_gss_hold_cred", "major_stat" },
  { 7, OUT, false, "mach_gss_hold_cred", "minor_stat" },
  { 0, IN, false, "mach_gss_unhold_cred", "server" },
  { 1, IN, false, "mach_gss_unhold_cred", "mech" },
  { 2, IN, false, "mach_gss_unhold_cred", "nt" },
  { 3, IN, true, "mach_gss_unhold_cred", "princ" }, // UNLIMITED_SIZE
  { 4, OUT, false, "mach_gss_unhold_cred", "princ_size" }, // Auto-generated
  { 5, SERVERAUDITTOKEN, false, "mach_gss_unhold_cred", "atoken" },
  { 6, OUT, false, "mach_gss_unhold_cred", "major_stat" },
  { 7, OUT, false, "mach_gss_unhold_cred", "minor_stat" },
  { 0, IN, false, "mach_gss_lookup", "server" },
  { 1, IN, false, "mach_gss_lookup", "uid" },
  { 2, IN, false, "mach_gss_lookup", "asid" },
  { 3, SERVERAUDITTOKEN, false, "mach_gss_lookup", "atoken" },
  { 4, OUT, false, "mach_gss_lookup", "gssd_session_port" },
  { 0, IN, false, "kextd_ping", "server" },
  { 0, IN, false, "lockd_request", "server" },
  { 1, IN, false, "lockd_request", "vers" },
  { 2, IN, false, "lockd_request", "flags" },
  { 3, IN, false, "lockd_request", "xid" },
  { 4, IN, false, "lockd_request", "flk_start" },
  { 5, IN, false, "lockd_request", "flk_len" },
  { 6, IN, false, "lockd_request", "flk_pid" },
  { 7, IN, false, "lockd_request", "flk_type" },
  { 8, IN, false, "lockd_request", "flk_whence" },
  { 9, IN, true, "lockd_request", "sock_address" }, // FIXED_SIZE
  { 10, IN, true, "lockd_request", "cred" }, // FIXED_SIZE
  { 11, IN, false, "lockd_request", "fh_len" },
  { 12, IN, true, "lockd_request", "fh" }, // FIXED_SIZE
  { 0, IN, false, "lockd_ping", "server" },
  { 0, IN, false, "lockd_shutdown", "server" },
  { 0, IN, false, "audit_triggers", "audit_port" },
  { 1, IN, false, "audit_triggers", "flags" },
  { 0, IN, false, "clock_get_time", "clock_serv" },
  { 1, OUT, false, "clock_get_time", "cur_time" },
  { 0, IN, false, "clock_get_attributes", "clock_serv" },
  { 1, IN, false, "clock_get_attributes", "flavor" },
  { 2, OUT, true, "clock_get_attributes", "clock_attr" }, // CountInOut // VARIABLE_SIZE
  { 3, INOUT, false, "clock_get_attributes", "clock_attr_size" }, // Auto-generated
  { 0, IN, false, "clock_alarm", "clock_serv" },
  { 1, IN, false, "clock_alarm", "alarm_type" },
  { 2, IN, false, "clock_alarm", "alarm_time" },
  { 3, IN, false, "clock_alarm", "alarm_port" },
  { 0, IN, false, "clock_set_time", "clock_ctrl" },
  { 1, IN, false, "clock_set_time", "new_time" },
  { 0, IN, false, "clock_set_attributes", "clock_ctrl" },
  { 1, IN, false, "clock_set_attributes", "flavor" },
  { 2, IN, true, "clock_set_attributes", "clock_attr" }, // VARIABLE_SIZE
  { 3, OUT, false, "clock_set_attributes", "clock_attr_size" }, // Auto-generated
  { 0, IN, false, "clock_alarm_reply", "alarm_port" },
  { 1, IN, false, "clock_alarm_reply", "alarm_code" },
  { 2, IN, false, "clock_alarm_reply", "alarm_type" },
  { 3, IN, false, "clock_alarm_reply", "alarm_time" },
  { 0, IN, false, "exception_raise", "exception_port" },
  { 1, IN, false, "exception_raise", "thread" },
  { 2, IN, false, "exception_raise", "task" },
  { 3, IN, false, "exception_raise", "exception" },
  { 4, IN, true, "exception_raise", "code" }, // VARIABLE_SIZE
  { 5, OUT, false, "exception_raise", "code_size" }, // Auto-generated
  { 0, IN, false, "exception_raise_state", "exception_port" },
  { 1, IN, false, "exception_raise_state", "exception" },
  { 2, IN, true, "exception_raise_state", "code" }, // const // VARIABLE_SIZE
  { 3, OUT, false, "exception_raise_state", "code_size" }, // Auto-generated
  { 4, INOUT, false, "exception_raise_state", "flavor" },
  { 5, IN, true, "exception_raise_state", "old_state" }, // const // VARIABLE_SIZE
  { 6, OUT, false, "exception_raise_state", "old_state_size" }, // Auto-generated
  { 7, OUT, true, "exception_raise_state", "new_state" }, // VARIABLE_SIZE
  { 8, OUT, false, "exception_raise_state", "new_state_size" }, // Auto-generated
  { 0, IN, false, "exception_raise_state_identity", "exception_port" },
  { 1, IN, false, "exception_raise_state_identity", "thread" },
  { 2, IN, false, "exception_raise_state_identity", "task" },
  { 3, IN, false, "exception_raise_state_identity", "exception" },
  { 4, IN, true, "exception_raise_state_identity", "code" }, // VARIABLE_SIZE
  { 5, OUT, false, "exception_raise_state_identity", "code_size" }, // Auto-generated
  { 6, INOUT, false, "exception_raise_state_identity", "flavor" },
  { 7, IN, true, "exception_raise_state_identity", "old_state" }, // VARIABLE_SIZE
  { 8, OUT, false, "exception_raise_state_identity", "old_state_size" }, // Auto-generated
  { 9, OUT, true, "exception_raise_state_identity", "new_state" }, // VARIABLE_SIZE
  { 10, OUT, false, "exception_raise_state_identity", "new_state_size" }, // Auto-generated
  { 0, IN, false, "host_calendar_changed", "notify_port" },
  { 0, IN, false, "host_calendar_set", "notify_port" },
  { 0, IN, false, "host_get_boot_info", "host_priv" },
  { 1, OUT, false, "host_get_boot_info", "boot_info" },
  { 0, IN, false, "host_reboot", "host_priv" },
  { 1, IN, false, "host_reboot", "options" },
  { 0, IN, false, "host_priv_statistics", "host_priv" },
  { 1, IN, false, "host_priv_statistics", "flavor" },
  { 2, OUT, true, "host_priv_statistics", "host_info_out" }, // CountInOut // VARIABLE_SIZE
  { 3, INOUT, false, "host_priv_statistics", "host_info_out_size" }, // Auto-generated
  { 0, IN, false, "host_default_memory_manager", "host_priv" },
  { 1, INOUT, false, "host_default_memory_manager", "default_manager" },
  { 2, IN, false, "host_default_memory_manager", "cluster_size" },
  { 0, IN, false, "vm_wire", "host_priv" },
  { 1, IN, false, "vm_wire", "task" },
  { 2, IN, false, "vm_wire", "address" },
  { 3, IN, false, "vm_wire", "size" },
  { 4, IN, false, "vm_wire", "desired_access" },
  { 0, IN, false, "thread_wire", "host_priv" },
  { 1, IN, false, "thread_wire", "thread" },
  { 2, IN, false, "thread_wire", "wired" },
  { 0, IN, false, "vm_allocate_cpm", "host_priv" },
  { 1, IN, false, "vm_allocate_cpm", "task" },
  { 2, INOUT, false, "vm_allocate_cpm", "address" },
  { 3, IN, false, "vm_allocate_cpm", "size" },
  { 4, IN, false, "vm_allocate_cpm", "flags" },
  { 0, IN, false, "host_processors", "host_priv" },
  { 1, OUT, true, "host_processors", "out_processor_list" }, // UNLIMITED_SIZE
  { 2, OUT, false, "host_processors", "out_processor_list_size" }, // Auto-generated
  { 0, IN, false, "host_get_clock_control", "host_priv" },
  { 1, IN, false, "host_get_clock_control", "clock_id" },
  { 2, OUT, false, "host_get_clock_control", "clock_ctrl" },
  { 0, IN, false, "kmod_create", "host_priv" },
  { 1, IN, false, "kmod_create", "info" },
  { 2, OUT, false, "kmod_create", "module" },
  { 0, IN, false, "kmod_destroy", "host_priv" },
  { 1, IN, false, "kmod_destroy", "module" },
  { 0, IN, false, "kmod_control", "host_priv" },
  { 1, IN, false, "kmod_control", "module" },
  { 2, IN, false, "kmod_control", "flavor" },
  { 3, INOUT, true, "kmod_control", "data" }, // UNLIMITED_SIZE
  { 4, OUT, false, "kmod_control", "data_size" }, // Auto-generated
  { 0, IN, false, "host_get_special_port", "host_priv" },
  { 1, IN, false, "host_get_special_port", "node" },
  { 2, IN, false, "host_get_special_port", "which" },
  { 3, OUT, false, "host_get_special_port", "port" },
  { 0, IN, false, "host_set_special_port", "host_priv" },
  { 1, IN, false, "host_set_special_port", "which" },
  { 2, IN, false, "host_set_special_port", "port" },
  { 0, IN, false, "host_set_exception_ports", "host_priv" },
  { 1, IN, false, "host_set_exception_ports", "exception_mask" },
  { 2, IN, false, "host_set_exception_ports", "new_port" },
  { 3, IN, false, "host_set_exception_ports", "behavior" },
  { 4, IN, false, "host_set_exception_ports", "new_flavor" },
  { 0, IN, false, "host_get_exception_ports", "host_priv" },
  { 1, IN, false, "host_get_exception_ports", "exception_mask" },
  { 2, OUT, true, "host_get_exception_ports", "masks" }, // VARIABLE_SIZE
  { 3, OUT, false, "host_get_exception_ports", "masks_size" }, // Auto-generated
  { 4, OUT, true, "host_get_exception_ports", "old_handlers" }, // SameCount // VARIABLE_SIZE
  { 5, OUT, true, "host_get_exception_ports", "old_behaviors" }, // SameCount // VARIABLE_SIZE
  { 6, OUT, true, "host_get_exception_ports", "old_flavors" }, // SameCount // VARIABLE_SIZE
  { 0, IN, false, "host_swap_exception_ports", "host_priv" },
  { 1, IN, false, "host_swap_exception_ports", "exception_mask" },
  { 2, IN, false, "host_swap_exception_ports", "new_port" },
  { 3, IN, false, "host_swap_exception_ports", "behavior" },
  { 4, IN, false, "host_swap_exception_ports", "new_flavor" },
  { 5, OUT, true, "host_swap_exception_ports", "masks" }, // VARIABLE_SIZE
  { 6, OUT, false, "host_swap_exception_ports", "masks_size" }, // Auto-generated
  { 7, OUT, true, "host_swap_exception_ports", "old_handlerss" }, // SameCount // VARIABLE_SIZE
  { 8, OUT, true, "host_swap_exception_ports", "old_behaviors" }, // SameCount // VARIABLE_SIZE
  { 9, OUT, true, "host_swap_exception_ports", "old_flavors" }, // SameCount // VARIABLE_SIZE
  { 0, IN, false, "mach_vm_wire", "host_priv" },
  { 1, IN, false, "mach_vm_wire", "task" },
  { 2, IN, false, "mach_vm_wire", "address" },
  { 3, IN, false, "mach_vm_wire", "size" },
  { 4, IN, false, "mach_vm_wire", "desired_access" },
  { 0, IN, false, "host_processor_sets", "host_priv" },
  { 1, OUT, true, "host_processor_sets", "processor_sets" }, // UNLIMITED_SIZE
  { 2, OUT, false, "host_processor_sets", "processor_sets_size" }, // Auto-generated
  { 0, IN, false, "host_processor_set_priv", "host_priv" },
  { 1, IN, false, "host_processor_set_priv", "set_name" },
  { 2, OUT, false, "host_processor_set_priv", "set" },
  { 0, IN, false, "set_dp_control_port", "host" },
  { 1, IN, false, "set_dp_control_port", "control_port" },
  { 0, IN, false, "get_dp_control_port", "host" },
  { 1, OUT, false, "get_dp_control_port", "contorl_port" },
  { 0, IN, false, "host_set_UNDServer", "host" },
  { 1, IN, false, "host_set_UNDServer", "server" },
  { 0, IN, false, "host_get_UNDServer", "host" },
  { 1, OUT, false, "host_get_UNDServer", "server" },
  { 0, IN, false, "kext_request", "host_priv" },
  { 1, IN, false, "kext_request", "user_log_flags" },
  { 2, IN, true, "kext_request", "request_data" }, // UNLIMITED_SIZE
  { 3, OUT, false, "kext_request", "request_data_size" }, // Auto-generated
  { 4, OUT, true, "kext_request", "response_data" }, // UNLIMITED_SIZE
  { 5, OUT, false, "kext_request", "response_data_size" }, // Auto-generated
  { 6, OUT, true, "kext_request", "log_data" }, // UNLIMITED_SIZE
  { 7, OUT, false, "kext_request", "log_data_size" }, // Auto-generated
  { 8, OUT, false, "kext_request", "op_result" },
  { 0, IN, false, "host_security_create_task_token", "host_security" },
  { 1, IN, false, "host_security_create_task_token", "parent_task" },
  { 2, IN, false, "host_security_create_task_token", "sec_token" },
  { 3, IN, false, "host_security_create_task_token", "audit_token" },
  { 4, IN, false, "host_security_create_task_token", "host" },
  { 5, IN, true, "host_security_create_task_token", "ledgers" }, // UNLIMITED_SIZE
  { 6, OUT, false, "host_security_create_task_token", "ledgers_size" }, // Auto-generated
  { 7, IN, false, "host_security_create_task_token", "inherit_memory" },
  { 8, OUT, false, "host_security_create_task_token", "child_task" },
  { 0, IN, false, "host_security_set_task_token", "host_security" },
  { 1, IN, false, "host_security_set_task_token", "target_task" },
  { 2, IN, false, "host_security_set_task_token", "sec_token" },
  { 3, IN, false, "host_security_set_task_token", "audit_token" },
  { 4, IN, false, "host_security_set_task_token", "host" },
  { 0, IN, false, "lock_acquire", "lock_set" },
  { 1, IN, false, "lock_acquire", "lock_id" },
  { 0, IN, false, "lock_release", "lock_set" },
  { 1, IN, false, "lock_release", "lock_id" },
  { 0, IN, false, "lock_try", "lock_set" },
  { 1, IN, false, "lock_try", "lock_id" },
  { 0, IN, false, "lock_make_stable", "lock_set" },
  { 1, IN, false, "lock_make_stable", "lock_id" },
  { 0, IN, false, "lock_handoff", "lock_set" },
  { 1, IN, false, "lock_handoff", "lock_id" },
  { 0, IN, false, "lock_handoff_accept", "lock_set" },
  { 1, IN, false, "lock_handoff_accept", "lock_id" },
  { 0, IN, false, "mach_exception_raise", "exception_port" },
  { 1, IN, false, "mach_exception_raise", "thread" },
  { 2, IN, false, "mach_exception_raise", "task" },
  { 3, IN, false, "mach_exception_raise", "exception" },
  { 4, IN, true, "mach_exception_raise", "code" }, // VARIABLE_SIZE
  { 5, OUT, false, "mach_exception_raise", "code_size" }, // Auto-generated
  { 0, IN, false, "mach_exception_raise_state", "exception_port" },
  { 1, IN, false, "mach_exception_raise_state", "exception" },
  { 2, IN, true, "mach_exception_raise_state", "code" }, // const // VARIABLE_SIZE
  { 3, OUT, false, "mach_exception_raise_state", "code_size" }, // Auto-generated
  { 4, INOUT, false, "mach_exception_raise_state", "flavor" },
  { 5, IN, true, "mach_exception_raise_state", "old_state" }, // const // VARIABLE_SIZE
  { 6, OUT, false, "mach_exception_raise_state", "old_state_size" }, // Auto-generated
  { 7, OUT, true, "mach_exception_raise_state", "new_state" }, // VARIABLE_SIZE
  { 8, OUT, false, "mach_exception_raise_state", "new_state_size" }, // Auto-generated
  { 0, IN, false, "mach_exception_raise_state_identity", "exception_port" },
  { 1, IN, false, "mach_exception_raise_state_identity", "thread" },
  { 2, IN, false, "mach_exception_raise_state_identity", "task" },
  { 3, IN, false, "mach_exception_raise_state_identity", "exception" },
  { 4, IN, true, "mach_exception_raise_state_identity", "code" }, // VARIABLE_SIZE
  { 5, OUT, false, "mach_exception_raise_state_identity", "code_size" }, // Auto-generated
  { 6, INOUT, false, "mach_exception_raise_state_identity", "flavor" },
  { 7, IN, true, "mach_exception_raise_state_identity", "old_state" }, // VARIABLE_SIZE
  { 8, OUT, false, "mach_exception_raise_state_identity", "old_state_size" }, // Auto-generated
  { 9, OUT, true, "mach_exception_raise_state_identity", "new_state" }, // VARIABLE_SIZE
  { 10, OUT, false, "mach_exception_raise_state_identity", "new_state_size" }, // Auto-generated
  { 0, IN, false, "host_info", "host" },
  { 1, IN, false, "host_info", "flavor" },
  { 2, OUT, true, "host_info", "host_info_out" }, // CountInOut // VARIABLE_SIZE
  { 3, INOUT, false, "host_info", "host_info_out_size" }, // Auto-generated
  { 0, IN, false, "host_kernel_version", "host" },
  { 1, OUT, false, "host_kernel_version", "kernel_version" },
  { 0, IN, false, "host_page_size", "host" },
  { 1, OUT, false, "host_page_size", "out_page_size" },
  { 0, IN, false, "mach_memory_object_memory_entry", "host" },
  { 1, IN, false, "mach_memory_object_memory_entry", "internal" },
  { 2, IN, false, "mach_memory_object_memory_entry", "size" },
  { 3, IN, false, "mach_memory_object_memory_entry", "permission" },
  { 4, IN, false, "mach_memory_object_memory_entry", "pager" },
  { 5, OUT, false, "mach_memory_object_memory_entry", "entry_handle" },
  { 0, IN, false, "host_processor_info", "host" },
  { 1, IN, false, "host_processor_info", "flavor" },
  { 2, OUT, false, "host_processor_info", "out_processor_count" },
  { 3, OUT, true, "host_processor_info", "out_processor_info" }, // UNLIMITED_SIZE
  { 4, OUT, false, "host_processor_info", "out_processor_info_size" }, // Auto-generated
  { 0, IN, false, "host_get_io_master", "host" },
  { 1, OUT, false, "host_get_io_master", "io_master" },
  { 0, IN, false, "host_get_clock_service", "host" },
  { 1, IN, false, "host_get_clock_service", "clock_id" },
  { 2, OUT, false, "host_get_clock_service", "clock_serv" },
  { 0, IN, false, "kmod_get_info", "host" },
  { 1, OUT, true, "kmod_get_info", "modules" }, // UNLIMITED_SIZE
  { 2, OUT, false, "kmod_get_info", "modules_size" }, // Auto-generated
  { 0, IN, false, "host_zone_info", "host" },
  { 1, OUT, true, "host_zone_info", "names" }, // Dealloc // UNLIMITED_SIZE
  { 2, OUT, false, "host_zone_info", "names_size" }, // Auto-generated
  { 3, OUT, true, "host_zone_info", "info" }, // Dealloc // UNLIMITED_SIZE
  { 4, OUT, false, "host_zone_info", "info_size" }, // Auto-generated
  { 0, IN, false, "host_virtual_physical_table_info", "host" },
  { 1, OUT, true, "host_virtual_physical_table_info", "info" }, // Dealloc // UNLIMITED_SIZE
  { 2, OUT, false, "host_virtual_physical_table_info", "info_size" }, // Auto-generated
  { 0, IN, false, "processor_set_default", "host" },
  { 1, OUT, false, "processor_set_default", "default_set" },
  { 0, IN, false, "processor_set_create", "host" },
  { 1, OUT, false, "processor_set_create", "new_set" },
  { 2, OUT, false, "processor_set_create", "new_name" },
  { 0, IN, false, "mach_memory_object_memory_entry_64", "host" },
  { 1, IN, false, "mach_memory_object_memory_entry_64", "internal" },
  { 2, IN, false, "mach_memory_object_memory_entry_64", "size" },
  { 3, IN, false, "mach_memory_object_memory_entry_64", "permission" },
  { 4, IN, false, "mach_memory_object_memory_entry_64", "pager" },
  { 5, OUT, false, "mach_memory_object_memory_entry_64", "entry_handle" },
  { 0, IN, false, "host_statistics", "host_priv" },
  { 1, IN, false, "host_statistics", "flavor" },
  { 2, OUT, true, "host_statistics", "host_info_out" }, // CountInOut // VARIABLE_SIZE
  { 3, INOUT, false, "host_statistics", "host_info_out_size" }, // Auto-generated
  { 0, IN, false, "host_request_notification", "host" },
  { 1, IN, false, "host_request_notification", "notify_type" },
  { 2, IN, false, "host_request_notification", "notify_port" },
  { 0, IN, false, "host_lockgroup_info", "host" },
  { 1, OUT, true, "host_lockgroup_info", "lockgroup_info" }, // Dealloc // UNLIMITED_SIZE
  { 2, OUT, false, "host_lockgroup_info", "lockgroup_info_size" }, // Auto-generated
  { 0, IN, false, "host_statistics64", "host_priv" },
  { 1, IN, false, "host_statistics64", "flavor" },
  { 2, OUT, true, "host_statistics64", "host_info64_out" }, // CountInOut // VARIABLE_SIZE
  { 3, INOUT, false, "host_statistics64", "host_info64_out_size" }, // Auto-generated
  { 0, IN, false, "mach_zone_info", "host" },
  { 1, OUT, true, "mach_zone_info", "names" }, // Dealloc // UNLIMITED_SIZE
  { 2, OUT, false, "mach_zone_info", "names_size" }, // Auto-generated
  { 3, OUT, true, "mach_zone_info", "info" }, // Dealloc // UNLIMITED_SIZE
  { 4, OUT, false, "mach_zone_info", "info_size" }, // Auto-generated
  { 0, IN, false, "host_create_mach_voucher", "host" },
  { 1, IN, true, "host_create_mach_voucher", "recipes" }, // VARIABLE_SIZE
  { 2, OUT, false, "host_create_mach_voucher", "recipes_size" }, // Auto-generated
  { 3, OUT, false, "host_create_mach_voucher", "voucher" },
  { 0, IN, false, "host_register_mach_voucher_attr_manager", "host" },
  { 1, IN, false, "host_register_mach_voucher_attr_manager", "attr_manager" },
  { 2, IN, false, "host_register_mach_voucher_attr_manager", "default_value" },
  { 3, OUT, false, "host_register_mach_voucher_attr_manager", "new_key" },
  { 4, OUT, false, "host_register_mach_voucher_attr_manager", "new_attr_control" },
  { 0, IN, false, "host_register_well_known_mach_voucher_attr_manager", "host" },
  { 1, IN, false, "host_register_well_known_mach_voucher_attr_manager", "attr_manager" },
  { 2, IN, false, "host_register_well_known_mach_voucher_attr_manager", "default_value" },
  { 3, IN, false, "host_register_well_known_mach_voucher_attr_manager", "key" },
  { 4, OUT, false, "host_register_well_known_mach_voucher_attr_manager", "new_attr_control" },
  { 0, IN, false, "host_set_atm_diagnostic_flag", "host_priv" },
  { 1, IN, false, "host_set_atm_diagnostic_flag", "diagnostic_flag" },
  { 0, IN, false, "mach_memory_info", "host" },
  { 1, OUT, true, "mach_memory_info", "names" }, // Dealloc // UNLIMITED_SIZE
  { 2, OUT, false, "mach_memory_info", "names_size" }, // Auto-generated
  { 3, OUT, true, "mach_memory_info", "info" }, // Dealloc // UNLIMITED_SIZE
  { 4, OUT, false, "mach_memory_info", "info_size" }, // Auto-generated
  { 5, OUT, true, "mach_memory_info", "memory_info" }, // Dealloc // UNLIMITED_SIZE
  { 6, OUT, false, "mach_memory_info", "memory_info_size" }, // Auto-generated
  { 0, IN, false, "host_set_multiuser_config_flags", "host_priv" },
  { 1, IN, false, "host_set_multiuser_config_flags", "multiuser_flags" },
  { 0, IN, false, "mach_port_names", "task" },
  { 1, OUT, true, "mach_port_names", "names" }, // UNLIMITED_SIZE
  { 2, OUT, false, "mach_port_names", "names_size" }, // Auto-generated
  { 3, OUT, true, "mach_port_names", "types" }, // UNLIMITED_SIZE
  { 4, OUT, false, "mach_port_names", "types_size" }, // Auto-generated
  { 0, IN, false, "mach_port_type", "task" },
  { 1, IN, false, "mach_port_type", "name" },
  { 2, OUT, false, "mach_port_type", "ptype" },
  { 0, IN, false, "mach_port_rename", "task" },
  { 1, IN, false, "mach_port_rename", "old_name" },
  { 2, IN, false, "mach_port_rename", "new_name" },
  { 0, IN, false, "mach_port_allocate_name", "task" },
  { 1, IN, false, "mach_port_allocate_name", "right" },
  { 2, IN, false, "mach_port_allocate_name", "name" },
  { 0, IN, false, "mach_port_allocate", "task" },
  { 1, IN, false, "mach_port_allocate", "right" },
  { 2, OUT, false, "mach_port_allocate", "name" },
  { 0, IN, false, "mach_port_destroy", "task" },
  { 1, IN, false, "mach_port_destroy", "name" },
  { 0, IN, false, "mach_port_deallocate", "task" },
  { 1, IN, false, "mach_port_deallocate", "name" },
  { 0, IN, false, "mach_port_get_refs", "task" },
  { 1, IN, false, "mach_port_get_refs", "name" },
  { 2, IN, false, "mach_port_get_refs", "right" },
  { 3, OUT, false, "mach_port_get_refs", "refs" },
  { 0, IN, false, "mach_port_mod_refs", "task" },
  { 1, IN, false, "mach_port_mod_refs", "name" },
  { 2, IN, false, "mach_port_mod_refs", "right" },
  { 3, IN, false, "mach_port_mod_refs", "delta" },
  { 0, IN, false, "mach_port_peek", "task" },
  { 1, IN, false, "mach_port_peek", "name" },
  { 2, IN, false, "mach_port_peek", "trailer_type" },
  { 3, INOUT, false, "mach_port_peek", "request_seqnop" },
  { 4, OUT, false, "mach_port_peek", "msg_sizep" },
  { 5, OUT, false, "mach_port_peek", "msg_idp" },
  { 6, OUT, true, "mach_port_peek", "trailer_infop" }, // CountInOut // VARIABLE_SIZE
  { 7, INOUT, false, "mach_port_peek", "trailer_infop_size" }, // Auto-generated
  { 0, IN, false, "mach_port_set_mscount", "task" },
  { 1, IN, false, "mach_port_set_mscount", "name" },
  { 2, IN, false, "mach_port_set_mscount", "mscount" },
  { 0, IN, false, "mach_port_get_set_status", "task" },
  { 1, IN, false, "mach_port_get_set_status", "name" },
  { 2, OUT, true, "mach_port_get_set_status", "members" }, // UNLIMITED_SIZE
  { 3, OUT, false, "mach_port_get_set_status", "members_size" }, // Auto-generated
  { 0, IN, false, "mach_port_move_member", "task" },
  { 1, IN, false, "mach_port_move_member", "member" },
  { 2, IN, false, "mach_port_move_member", "after" },
  { 0, IN, false, "mach_port_request_notification", "task" },
  { 1, IN, false, "mach_port_request_notification", "name" },
  { 2, IN, false, "mach_port_request_notification", "msgid" },
  { 3, IN, false, "mach_port_request_notification", "sync" },
  { 4, IN, false, "mach_port_request_notification", "notify" },
  { 5, OUT, false, "mach_port_request_notification", "previous" },
  { 0, IN, false, "mach_port_insert_right", "task" },
  { 1, IN, false, "mach_port_insert_right", "name" },
  { 2, IN, false, "mach_port_insert_right", "poly" },
  { 0, IN, false, "mach_port_extract_right", "task" },
  { 1, IN, false, "mach_port_extract_right", "name" },
  { 2, IN, false, "mach_port_extract_right", "msgt_name" },
  { 3, OUT, false, "mach_port_extract_right", "poly" },
  { 0, IN, false, "mach_port_set_seqno", "task" },
  { 1, IN, false, "mach_port_set_seqno", "name" },
  { 2, IN, false, "mach_port_set_seqno", "seqno" },
  { 0, IN, false, "mach_port_get_attributes", "task" },
  { 1, IN, false, "mach_port_get_attributes", "name" },
  { 2, IN, false, "mach_port_get_attributes", "flavor" },
  { 3, OUT, true, "mach_port_get_attributes", "port_info_out" }, // CountInOut // VARIABLE_SIZE
  { 4, INOUT, false, "mach_port_get_attributes", "port_info_out_size" }, // Auto-generated
  { 0, IN, false, "mach_port_set_attributes", "task" },
  { 1, IN, false, "mach_port_set_attributes", "name" },
  { 2, IN, false, "mach_port_set_attributes", "flavor" },
  { 3, IN, true, "mach_port_set_attributes", "port_info" }, // VARIABLE_SIZE
  { 4, OUT, false, "mach_port_set_attributes", "port_info_size" }, // Auto-generated
  { 0, IN, false, "mach_port_allocate_qos", "task" },
  { 1, IN, false, "mach_port_allocate_qos", "right" },
  { 2, INOUT, false, "mach_port_allocate_qos", "qos" },
  { 3, OUT, false, "mach_port_allocate_qos", "name" },
  { 0, IN, false, "mach_port_allocate_full", "task" },
  { 1, IN, false, "mach_port_allocate_full", "right" },
  { 2, IN, false, "mach_port_allocate_full", "proto" },
  { 3, INOUT, false, "mach_port_allocate_full", "qos" },
  { 4, INOUT, false, "mach_port_allocate_full", "name" },
  { 0, IN, false, "task_set_port_space", "task" },
  { 1, IN, false, "task_set_port_space", "table_entries" },
  { 0, IN, false, "mach_port_get_srights", "task" },
  { 1, IN, false, "mach_port_get_srights", "name" },
  { 2, OUT, false, "mach_port_get_srights", "srights" },
  { 0, IN, false, "mach_port_space_info", "task" },
  { 1, OUT, false, "mach_port_space_info", "space_info" },
  { 2, OUT, true, "mach_port_space_info", "table_info" }, // UNLIMITED_SIZE
  { 3, OUT, false, "mach_port_space_info", "table_info_size" }, // Auto-generated
  { 4, OUT, true, "mach_port_space_info", "tree_info" }, // UNLIMITED_SIZE
  { 5, OUT, false, "mach_port_space_info", "tree_info_size" }, // Auto-generated
  { 0, IN, false, "mach_port_dnrequest_info", "task" },
  { 1, IN, false, "mach_port_dnrequest_info", "name" },
  { 2, OUT, false, "mach_port_dnrequest_info", "dnr_total" },
  { 3, OUT, false, "mach_port_dnrequest_info", "dnr_used" },
  { 0, IN, false, "mach_port_kernel_object", "task" },
  { 1, IN, false, "mach_port_kernel_object", "name" },
  { 2, OUT, false, "mach_port_kernel_object", "object_type" },
  { 3, OUT, false, "mach_port_kernel_object", "object_addr" },
  { 0, IN, false, "mach_port_insert_member", "task" },
  { 1, IN, false, "mach_port_insert_member", "name" },
  { 2, IN, false, "mach_port_insert_member", "pset" },
  { 0, IN, false, "mach_port_extract_member", "task" },
  { 1, IN, false, "mach_port_extract_member", "name" },
  { 2, IN, false, "mach_port_extract_member", "pset" },
  { 0, IN, false, "mach_port_get_context", "task" },
  { 1, IN, false, "mach_port_get_context", "name" },
  { 2, OUT, false, "mach_port_get_context", "context" },
  { 0, IN, false, "mach_port_set_context", "task" },
  { 1, IN, false, "mach_port_set_context", "name" },
  { 2, IN, false, "mach_port_set_context", "context" },
  { 0, IN, false, "mach_port_kobject", "task" },
  { 1, IN, false, "mach_port_kobject", "name" },
  { 2, OUT, false, "mach_port_kobject", "object_type" },
  { 3, OUT, false, "mach_port_kobject", "object_addr" },
  { 0, IN, false, "mach_port_construct", "task" },
  { 1, IN, false, "mach_port_construct", "options" },
  { 2, IN, false, "mach_port_construct", "context" },
  { 3, OUT, false, "mach_port_construct", "name" },
  { 0, IN, false, "mach_port_destruct", "task" },
  { 1, IN, false, "mach_port_destruct", "name" },
  { 2, IN, false, "mach_port_destruct", "srdelta" },
  { 3, IN, false, "mach_port_destruct", "guard" },
  { 0, IN, false, "mach_port_guard", "task" },
  { 1, IN, false, "mach_port_guard", "name" },
  { 2, IN, false, "mach_port_guard", "guard" },
  { 3, IN, false, "mach_port_guard", "strict" },
  { 0, IN, false, "mach_port_unguard", "task" },
  { 1, IN, false, "mach_port_unguard", "name" },
  { 2, IN, false, "mach_port_unguard", "guard" },
  { 0, IN, false, "mach_port_space_basic_info", "task" },
  { 1, OUT, false, "mach_port_space_basic_info", "basic_info" },
  { 0, IN, false, "mach_vm_allocate", "target" },
  { 1, INOUT, false, "mach_vm_allocate", "address" },
  { 2, IN, false, "mach_vm_allocate", "size" },
  { 3, IN, false, "mach_vm_allocate", "flags" },
  { 0, IN, false, "mach_vm_deallocate", "target" },
  { 1, IN, false, "mach_vm_deallocate", "address" },
  { 2, IN, false, "mach_vm_deallocate", "size" },
  { 0, IN, false, "mach_vm_protect", "target_task" },
  { 1, IN, false, "mach_vm_protect", "address" },
  { 2, IN, false, "mach_vm_protect", "size" },
  { 3, IN, false, "mach_vm_protect", "set_maximum" },
  { 4, IN, false, "mach_vm_protect", "new_protection" },
  { 0, IN, false, "mach_vm_inherit", "target_task" },
  { 1, IN, false, "mach_vm_inherit", "address" },
  { 2, IN, false, "mach_vm_inherit", "size" },
  { 3, IN, false, "mach_vm_inherit", "new_inheritance" },
  { 0, IN, false, "mach_vm_read", "target_task" },
  { 1, IN, false, "mach_vm_read", "address" },
  { 2, IN, false, "mach_vm_read", "size" },
  { 3, OUT, true, "mach_vm_read", "data" }, // UNLIMITED_SIZE
  { 4, OUT, false, "mach_vm_read", "data_size" }, // Auto-generated
  { 0, IN, false, "mach_vm_read_list", "target_task" },
  { 1, INOUT, true, "mach_vm_read_list", "data_list" }, // FIXED_SIZE
  { 2, IN, false, "mach_vm_read_list", "count" },
  { 0, IN, false, "mach_vm_write", "target_task" },
  { 1, IN, false, "mach_vm_write", "address" },
  { 2, IN, true, "mach_vm_write", "data" }, // UNLIMITED_SIZE
  { 3, OUT, false, "mach_vm_write", "data_size" }, // Auto-generated
  { 0, IN, false, "mach_vm_copy", "target_task" },
  { 1, IN, false, "mach_vm_copy", "source_address" },
  { 2, IN, false, "mach_vm_copy", "size" },
  { 3, IN, false, "mach_vm_copy", "dest_address" },
  { 0, IN, false, "mach_vm_read_overwrite", "target_task" },
  { 1, IN, false, "mach_vm_read_overwrite", "address" },
  { 2, IN, false, "mach_vm_read_overwrite", "size" },
  { 3, IN, false, "mach_vm_read_overwrite", "data" },
  { 4, OUT, false, "mach_vm_read_overwrite", "outsize" },
  { 0, IN, false, "mach_vm_msync", "target_task" },
  { 1, IN, false, "mach_vm_msync", "address" },
  { 2, IN, false, "mach_vm_msync", "size" },
  { 3, IN, false, "mach_vm_msync", "sync_flags" },
  { 0, IN, false, "mach_vm_behavior_set", "target_task" },
  { 1, IN, false, "mach_vm_behavior_set", "address" },
  { 2, IN, false, "mach_vm_behavior_set", "size" },
  { 3, IN, false, "mach_vm_behavior_set", "new_behavior" },
  { 0, IN, false, "mach_vm_map", "target_task" },
  { 1, INOUT, false, "mach_vm_map", "address" },
  { 2, IN, false, "mach_vm_map", "size" },
  { 3, IN, false, "mach_vm_map", "mask" },
  { 4, IN, false, "mach_vm_map", "flags" },
  { 5, IN, false, "mach_vm_map", "object" },
  { 6, IN, false, "mach_vm_map", "offset" },
  { 7, IN, false, "mach_vm_map", "copy" },
  { 8, IN, false, "mach_vm_map", "cur_protection" },
  { 9, IN, false, "mach_vm_map", "max_protection" },
  { 10, IN, false, "mach_vm_map", "inheritance" },
  { 0, IN, false, "mach_vm_machine_attribute", "target_task" },
  { 1, IN, false, "mach_vm_machine_attribute", "address" },
  { 2, IN, false, "mach_vm_machine_attribute", "size" },
  { 3, IN, false, "mach_vm_machine_attribute", "attribute" },
  { 4, INOUT, false, "mach_vm_machine_attribute", "value" },
  { 0, IN, false, "mach_vm_remap", "target_task" },
  { 1, INOUT, false, "mach_vm_remap", "target_address" },
  { 2, IN, false, "mach_vm_remap", "size" },
  { 3, IN, false, "mach_vm_remap", "mask" },
  { 4, IN, false, "mach_vm_remap", "flags" },
  { 5, IN, false, "mach_vm_remap", "src_task" },
  { 6, IN, false, "mach_vm_remap", "src_address" },
  { 7, IN, false, "mach_vm_remap", "copy" },
  { 8, OUT, false, "mach_vm_remap", "cur_protection" },
  { 9, OUT, false, "mach_vm_remap", "max_protection" },
  { 10, IN, false, "mach_vm_remap", "inheritance" },
  { 0, IN, false, "mach_vm_page_query", "target_map" },
  { 1, IN, false, "mach_vm_page_query", "offset" },
  { 2, OUT, false, "mach_vm_page_query", "disposition" },
  { 3, OUT, false, "mach_vm_page_query", "ref_count" },
  { 0, IN, false, "mach_vm_region_recurse", "target_task" },
  { 1, INOUT, false, "mach_vm_region_recurse", "address" },
  { 2, OUT, false, "mach_vm_region_recurse", "size" },
  { 3, INOUT, false, "mach_vm_region_recurse", "nesting_depth" },
  { 4, OUT, true, "mach_vm_region_recurse", "info" }, // CountInOut // VARIABLE_SIZE
  { 5, INOUT, false, "mach_vm_region_recurse", "info_size" }, // Auto-generated
  { 0, IN, false, "mach_vm_region", "target_task" },
  { 1, INOUT, false, "mach_vm_region", "address" },
  { 2, OUT, false, "mach_vm_region", "size" },
  { 3, IN, false, "mach_vm_region", "flavor" },
  { 4, OUT, true, "mach_vm_region", "info" }, // CountInOut // VARIABLE_SIZE
  { 5, INOUT, false, "mach_vm_region", "info_size" }, // Auto-generated
  { 6, OUT, false, "mach_vm_region", "object_name" },
  { 0, IN, false, "mach_make_memory_entry", "target_task" },
  { 1, INOUT, false, "mach_make_memory_entry", "size" },
  { 2, IN, false, "mach_make_memory_entry", "offset" },
  { 3, IN, false, "mach_make_memory_entry", "permission" },
  { 4, OUT, false, "mach_make_memory_entry", "object_handle" },
  { 5, IN, false, "mach_make_memory_entry", "parent_handle" },
  { 0, IN, false, "mach_vm_purgable_control", "target_task" },
  { 1, IN, false, "mach_vm_purgable_control", "address" },
  { 2, IN, false, "mach_vm_purgable_control", "control" },
  { 3, INOUT, false, "mach_vm_purgable_control", "state" },
  { 0, IN, false, "mach_vm_page_info", "target_task" },
  { 1, IN, false, "mach_vm_page_info", "address" },
  { 2, IN, false, "mach_vm_page_info", "flavor" },
  { 3, OUT, true, "mach_vm_page_info", "info" }, // CountInOut // VARIABLE_SIZE
  { 4, INOUT, false, "mach_vm_page_info", "info_size" }, // Auto-generated
  { 0, IN, false, "mach_voucher_extract_attr_content", "voucher" },
  { 1, IN, false, "mach_voucher_extract_attr_content", "key" },
  { 2, OUT, true, "mach_voucher_extract_attr_content", "content" }, // CountInOut // VARIABLE_SIZE
  { 3, INOUT, false, "mach_voucher_extract_attr_content", "content_size" }, // Auto-generated
  { 0, IN, false, "mach_voucher_extract_attr_recipe", "voucher" },
  { 1, IN, false, "mach_voucher_extract_attr_recipe", "key" },
  { 2, OUT, true, "mach_voucher_extract_attr_recipe", "recipe" }, // CountInOut // VARIABLE_SIZE
  { 3, INOUT, false, "mach_voucher_extract_attr_recipe", "recipe_size" }, // Auto-generated
  { 0, IN, false, "mach_voucher_extract_all_attr_recipes", "voucher" },
  { 1, OUT, true, "mach_voucher_extract_all_attr_recipes", "recipes" }, // CountInOut // VARIABLE_SIZE
  { 2, INOUT, false, "mach_voucher_extract_all_attr_recipes", "recipes_size" }, // Auto-generated
  { 0, IN, false, "mach_voucher_attr_command", "voucher" },
  { 1, IN, false, "mach_voucher_attr_command", "key" },
  { 2, IN, false, "mach_voucher_attr_command", "command" },
  { 3, IN, true, "mach_voucher_attr_command", "in_content" }, // VARIABLE_SIZE
  { 4, OUT, false, "mach_voucher_attr_command", "in_content_size" }, // Auto-generated
  { 5, OUT, true, "mach_voucher_attr_command", "out_content" }, // CountInOut // VARIABLE_SIZE
  { 6, INOUT, false, "mach_voucher_attr_command", "out_content_size" }, // Auto-generated
  { 0, IN, false, "mach_voucher_debug_info", "task" },
  { 1, IN, false, "mach_voucher_debug_info", "voucher_name" },
  { 2, OUT, true, "mach_voucher_debug_info", "recipes" }, // CountInOut // VARIABLE_SIZE
  { 3, INOUT, false, "mach_voucher_debug_info", "recipes_size" }, // Auto-generated
  { 0, IN, false, "mach_voucher_attr_control_get_values", "control" },
  { 1, IN, false, "mach_voucher_attr_control_get_values", "voucher" },
  { 2, OUT, true, "mach_voucher_attr_control_get_values", "value_handles" }, // CountInOut // VARIABLE_SIZE
  { 3, INOUT, false, "mach_voucher_attr_control_get_values", "value_handles_size" }, // Auto-generated
  { 0, IN, false, "mach_voucher_attr_control_create_mach_voucher", "control" },
  { 1, IN, true, "mach_voucher_attr_control_create_mach_voucher", "recipes" }, // VARIABLE_SIZE
  { 2, OUT, false, "mach_voucher_attr_control_create_mach_voucher", "recipes_size" }, // Auto-generated
  { 3, OUT, false, "mach_voucher_attr_control_create_mach_voucher", "voucher" },
  { 0, IN, false, "mach_notify_port_deleted", "notify" },
  { 1, IN, false, "mach_notify_port_deleted", "name" },
  { 0, IN, false, "mach_notify_port_destroyed", "notify" },
  { 1, IN, false, "mach_notify_port_destroyed", "rights" },
  { 0, IN, false, "mach_notify_no_senders", "notify" },
  { 1, IN, false, "mach_notify_no_senders", "mscount" },
  { 0, IN, false, "mach_notify_send_once", "notify" },
  { 0, IN, false, "mach_notify_dead_name", "notify" },
  { 1, IN, false, "mach_notify_dead_name", "name" },
  { 0, IN, false, "processor_start", "processor" },
  { 0, IN, false, "processor_exit", "processor" },
  { 0, IN, false, "processor_info", "processor" },
  { 1, IN, false, "processor_info", "flavor" },
  { 2, OUT, false, "processor_info", "host" },
  { 3, OUT, true, "processor_info", "processor_info_out" }, // CountInOut // VARIABLE_SIZE
  { 4, INOUT, false, "processor_info", "processor_info_out_size" }, // Auto-generated
  { 0, IN, false, "processor_control", "processor" },
  { 1, IN, true, "processor_control", "processor_cmd" }, // VARIABLE_SIZE
  { 2, OUT, false, "processor_control", "processor_cmd_size" }, // Auto-generated
  { 0, IN, false, "processor_assign", "processor" },
  { 1, IN, false, "processor_assign", "new_set" },
  { 2, IN, false, "processor_assign", "wait" },
  { 0, IN, false, "processor_get_assignment", "processor" },
  { 1, OUT, false, "processor_get_assignment", "assigned_set" },
  { 0, IN, false, "processor_set_statistics", "pset" },
  { 1, IN, false, "processor_set_statistics", "flavor" },
  { 2, OUT, true, "processor_set_statistics", "info_out" }, // CountInOut // VARIABLE_SIZE
  { 3, INOUT, false, "processor_set_statistics", "info_out_size" }, // Auto-generated
  { 0, IN, false, "processor_set_destroy", "set" },
  { 0, IN, false, "processor_set_max_priority", "processor_set" },
  { 1, IN, false, "processor_set_max_priority", "max_priority" },
  { 2, IN, false, "processor_set_max_priority", "change_threads" },
  { 0, IN, false, "processor_set_policy_enable", "processor_set" },
  { 1, IN, false, "processor_set_policy_enable", "policy" },
  { 0, IN, false, "processor_set_policy_disable", "processor_set" },
  { 1, IN, false, "processor_set_policy_disable", "policy" },
  { 2, IN, false, "processor_set_policy_disable", "change_threads" },
  { 0, IN, false, "processor_set_tasks", "processor_set" },
  { 1, OUT, true, "processor_set_tasks", "task_list" }, // UNLIMITED_SIZE
  { 2, OUT, false, "processor_set_tasks", "task_list_size" }, // Auto-generated
  { 0, IN, false, "processor_set_threads", "processor_set" },
  { 1, OUT, true, "processor_set_threads", "thread_list" }, // UNLIMITED_SIZE
  { 2, OUT, false, "processor_set_threads", "thread_list_size" }, // Auto-generated
  { 0, IN, false, "processor_set_policy_control", "pset" },
  { 1, IN, false, "processor_set_policy_control", "flavor" },
  { 2, IN, true, "processor_set_policy_control", "policy_info" }, // VARIABLE_SIZE
  { 3, OUT, false, "processor_set_policy_control", "policy_info_size" }, // Auto-generated
  { 4, IN, false, "processor_set_policy_control", "change" },
  { 0, IN, false, "processor_set_stack_usage", "pset" },
  { 1, OUT, false, "processor_set_stack_usage", "ltotal" },
  { 2, OUT, false, "processor_set_stack_usage", "space" },
  { 3, OUT, false, "processor_set_stack_usage", "resident" },
  { 4, OUT, false, "processor_set_stack_usage", "maxusage" },
  { 5, OUT, false, "processor_set_stack_usage", "maxstack" },
  { 0, IN, false, "processor_set_info", "set_name" },
  { 1, IN, false, "processor_set_info", "flavor" },
  { 2, OUT, false, "processor_set_info", "host" },
  { 3, OUT, true, "processor_set_info", "info_out" }, // CountInOut // VARIABLE_SIZE
  { 4, INOUT, false, "processor_set_info", "info_out_size" }, // Auto-generated
  { 0, IN, false, "task_create", "target_task" },
  { 1, IN, true, "task_create", "ledgers" }, // UNLIMITED_SIZE
  { 2, OUT, false, "task_create", "ledgers_size" }, // Auto-generated
  { 3, IN, false, "task_create", "inherit_memory" },
  { 4, OUT, false, "task_create", "child_task" },
  { 0, IN, false, "task_terminate", "target_task" },
  { 0, IN, false, "task_threads", "target_task" },
  { 1, OUT, true, "task_threads", "act_list" }, // UNLIMITED_SIZE
  { 2, OUT, false, "task_threads", "act_list_size" }, // Auto-generated
  { 0, IN, false, "mach_ports_register", "target_task" },
  { 1, IN, false, "mach_ports_register", "init_port_set" },
  { 0, IN, false, "mach_ports_lookup", "target_task" },
  { 1, OUT, false, "mach_ports_lookup", "init_port_set" },
  { 0, IN, false, "task_info", "target_task" },
  { 1, IN, false, "task_info", "flavor" },
  { 2, OUT, true, "task_info", "task_info_out" }, // CountInOut // VARIABLE_SIZE
  { 3, INOUT, false, "task_info", "task_info_out_size" }, // Auto-generated
  { 0, IN, false, "task_set_info", "target_task" },
  { 1, IN, false, "task_set_info", "flavor" },
  { 2, IN, true, "task_set_info", "task_info_in" }, // VARIABLE_SIZE
  { 3, OUT, false, "task_set_info", "task_info_in_size" }, // Auto-generated
  { 0, IN, false, "task_suspend", "target_task" },
  { 0, IN, false, "task_resume", "target_task" },
  { 0, IN, false, "task_get_special_port", "task" },
  { 1, IN, false, "task_get_special_port", "which_port" },
  { 2, OUT, false, "task_get_special_port", "special_port" },
  { 0, IN, false, "task_set_special_port", "task" },
  { 1, IN, false, "task_set_special_port", "which_port" },
  { 2, IN, false, "task_set_special_port", "special_port" },
  { 0, IN, false, "thread_create", "parent_task" },
  { 1, OUT, false, "thread_create", "child_act" },
  { 0, IN, false, "thread_create_running", "parent_task" },
  { 1, IN, false, "thread_create_running", "flavor" },
  { 2, IN, true, "thread_create_running", "new_state" }, // VARIABLE_SIZE
  { 3, OUT, false, "thread_create_running", "new_state_size" }, // Auto-generated
  { 4, OUT, false, "thread_create_running", "child_act" },
  { 0, IN, false, "task_set_exception_ports", "task" },
  { 1, IN, false, "task_set_exception_ports", "exception_mask" },
  { 2, IN, false, "task_set_exception_ports", "new_port" },
  { 3, IN, false, "task_set_exception_ports", "behavior" },
  { 4, IN, false, "task_set_exception_ports", "new_flavor" },
  { 0, IN, false, "task_get_exception_ports", "task" },
  { 1, IN, false, "task_get_exception_ports", "exception_mask" },
  { 2, OUT, true, "task_get_exception_ports", "masks" }, // VARIABLE_SIZE
  { 3, OUT, false, "task_get_exception_ports", "masks_size" }, // Auto-generated
  { 4, OUT, true, "task_get_exception_ports", "old_handlers" }, // SameCount // VARIABLE_SIZE
  { 5, OUT, true, "task_get_exception_ports", "old_behaviors" }, // SameCount // VARIABLE_SIZE
  { 6, OUT, true, "task_get_exception_ports", "old_flavors" }, // SameCount // VARIABLE_SIZE
  { 0, IN, false, "task_swap_exception_ports", "task" },
  { 1, IN, false, "task_swap_exception_ports", "exception_mask" },
  { 2, IN, false, "task_swap_exception_ports", "new_port" },
  { 3, IN, false, "task_swap_exception_ports", "behavior" },
  { 4, IN, false, "task_swap_exception_ports", "new_flavor" },
  { 5, OUT, true, "task_swap_exception_ports", "masks" }, // VARIABLE_SIZE
  { 6, OUT, false, "task_swap_exception_ports", "masks_size" }, // Auto-generated
  { 7, OUT, true, "task_swap_exception_ports", "old_handlerss" }, // SameCount // VARIABLE_SIZE
  { 8, OUT, true, "task_swap_exception_ports", "old_behaviors" }, // SameCount // VARIABLE_SIZE
  { 9, OUT, true, "task_swap_exception_ports", "old_flavors" }, // SameCount // VARIABLE_SIZE
  { 0, IN, false, "lock_set_create", "task" },
  { 1, OUT, false, "lock_set_create", "new_lock_set" },
  { 2, IN, false, "lock_set_create", "n_ulocks" },
  { 3, IN, false, "lock_set_create", "policy" },
  { 0, IN, false, "lock_set_destroy", "task" },
  { 1, IN, false, "lock_set_destroy", "lock_set" },
  { 0, IN, false, "semaphore_create", "task" },
  { 1, OUT, false, "semaphore_create", "semaphore" },
  { 2, IN, false, "semaphore_create", "policy" },
  { 3, IN, false, "semaphore_create", "value" },
  { 0, IN, false, "semaphore_destroy", "task" },
  { 1, IN, false, "semaphore_destroy", "semaphore" },
  { 0, IN, false, "task_policy_set", "task" },
  { 1, IN, false, "task_policy_set", "flavor" },
  { 2, IN, true, "task_policy_set", "policy_info" }, // VARIABLE_SIZE
  { 3, OUT, false, "task_policy_set", "policy_info_size" }, // Auto-generated
  { 0, IN, false, "task_policy_get", "task" },
  { 1, IN, false, "task_policy_get", "flavor" },
  { 2, OUT, true, "task_policy_get", "policy_info" }, // CountInOut // VARIABLE_SIZE
  { 3, INOUT, false, "task_policy_get", "policy_info_size" }, // Auto-generated
  { 4, INOUT, false, "task_policy_get", "get_default" },
  { 0, IN, false, "task_sample", "task" },
  { 1, IN, false, "task_sample", "reply" },
  { 0, IN, false, "task_policy", "task" },
  { 1, IN, false, "task_policy", "policy" },
  { 2, IN, true, "task_policy", "base" }, // VARIABLE_SIZE
  { 3, OUT, false, "task_policy", "base_size" }, // Auto-generated
  { 4, IN, false, "task_policy", "set_limit" },
  { 5, IN, false, "task_policy", "change" },
  { 0, IN, false, "task_set_emulation", "target_port" },
  { 1, IN, false, "task_set_emulation", "routine_entry_pt" },
  { 2, IN, false, "task_set_emulation", "routine_number" },
  { 0, IN, false, "task_get_emulation_vector", "task" },
  { 1, OUT, false, "task_get_emulation_vector", "vector_start" },
  { 2, OUT, true, "task_get_emulation_vector", "emulation_vector" }, // UNLIMITED_SIZE
  { 3, OUT, false, "task_get_emulation_vector", "emulation_vector_size" }, // Auto-generated
  { 0, IN, false, "task_set_emulation_vector", "task" },
  { 1, IN, false, "task_set_emulation_vector", "vector_start" },
  { 2, IN, true, "task_set_emulation_vector", "emulation_vector" }, // UNLIMITED_SIZE
  { 3, OUT, false, "task_set_emulation_vector", "emulation_vector_size" }, // Auto-generated
  { 0, IN, false, "task_set_ras_pc", "target_task" },
  { 1, IN, false, "task_set_ras_pc", "basepc" },
  { 2, IN, false, "task_set_ras_pc", "boundspc" },
  { 0, IN, false, "task_zone_info", "target_task" },
  { 1, OUT, true, "task_zone_info", "names" }, // Dealloc // UNLIMITED_SIZE
  { 2, OUT, false, "task_zone_info", "names_size" }, // Auto-generated
  { 3, OUT, true, "task_zone_info", "info" }, // Dealloc // UNLIMITED_SIZE
  { 4, OUT, false, "task_zone_info", "info_size" }, // Auto-generated
  { 0, IN, false, "task_assign", "task" },
  { 1, IN, false, "task_assign", "new_set" },
  { 2, IN, false, "task_assign", "assign_threads" },
  { 0, IN, false, "task_assign_default", "task" },
  { 1, IN, false, "task_assign_default", "assign_threads" },
  { 0, IN, false, "task_get_assignment", "task" },
  { 1, OUT, false, "task_get_assignment", "assigned_set" },
  { 0, IN, false, "task_set_policy", "task" },
  { 1, IN, false, "task_set_policy", "pset" },
  { 2, IN, false, "task_set_policy", "policy" },
  { 3, IN, true, "task_set_policy", "base" }, // VARIABLE_SIZE
  { 4, OUT, false, "task_set_policy", "base_size" }, // Auto-generated
  { 5, IN, true, "task_set_policy", "limit" }, // VARIABLE_SIZE
  { 6, OUT, false, "task_set_policy", "limit_size" }, // Auto-generated
  { 7, IN, false, "task_set_policy", "change" },
  { 0, IN, false, "task_get_state", "task" },
  { 1, IN, false, "task_get_state", "flavor" },
  { 2, OUT, true, "task_get_state", "old_state" }, // CountInOut // VARIABLE_SIZE
  { 3, INOUT, false, "task_get_state", "old_state_size" }, // Auto-generated
  { 0, IN, false, "task_set_state", "task" },
  { 1, IN, false, "task_set_state", "flavor" },
  { 2, IN, true, "task_set_state", "new_state" }, // VARIABLE_SIZE
  { 3, OUT, false, "task_set_state", "new_state_size" }, // Auto-generated
  { 0, IN, false, "task_set_phys_footprint_limit", "task" },
  { 1, IN, false, "task_set_phys_footprint_limit", "new_limit" },
  { 2, OUT, false, "task_set_phys_footprint_limit", "old_limit" },
  { 0, IN, false, "task_suspend2", "target_task" },
  { 1, OUT, false, "task_suspend2", "suspend_token" },
  { 0, IN, false, "task_resume2", "suspend_token" },
  { 0, IN, false, "task_purgable_info", "task" },
  { 1, OUT, false, "task_purgable_info", "stats" },
  { 0, IN, false, "task_get_mach_voucher", "task" },
  { 1, IN, false, "task_get_mach_voucher", "which" },
  { 2, OUT, false, "task_get_mach_voucher", "voucher" },
  { 0, IN, false, "task_set_mach_voucher", "task" },
  { 1, IN, false, "task_set_mach_voucher", "voucher" },
  { 0, IN, false, "task_swap_mach_voucher", "task" },
  { 1, IN, false, "task_swap_mach_voucher", "new_voucher" },
  { 2, INOUT, false, "task_swap_mach_voucher", "old_voucher" },
  { 0, IN, false, "task_generate_corpse", "task" },
  { 1, OUT, false, "task_generate_corpse", "corpse_task_port" },
  { 0, IN, false, "task_map_corpse_info", "task" },
  { 1, IN, false, "task_map_corpse_info", "corspe_task" },
  { 2, OUT, false, "task_map_corpse_info", "kcd_addr_begin" },
  { 3, OUT, false, "task_map_corpse_info", "kcd_size" },
  { 0, IN, false, "task_register_dyld_image_infos", "task" },
  { 1, IN, true, "task_register_dyld_image_infos", "dyld_images" }, // UNLIMITED_SIZE
  { 2, OUT, false, "task_register_dyld_image_infos", "dyld_images_size" }, // Auto-generated
  { 0, IN, false, "task_unregister_dyld_image_infos", "task" },
  { 1, IN, true, "task_unregister_dyld_image_infos", "dyld_images" }, // UNLIMITED_SIZE
  { 2, OUT, false, "task_unregister_dyld_image_infos", "dyld_images_size" }, // Auto-generated
  { 0, IN, false, "task_get_dyld_image_infos", "task" },
  { 1, OUT, true, "task_get_dyld_image_infos", "dyld_images" }, // UNLIMITED_SIZE
  { 2, OUT, false, "task_get_dyld_image_infos", "dyld_images_size" }, // Auto-generated
  { 0, IN, false, "task_register_dyld_shared_cache_image_info", "task" },
  { 1, IN, false, "task_register_dyld_shared_cache_image_info", "dyld_cache_image" },
  { 2, IN, false, "task_register_dyld_shared_cache_image_info", "no_cache" },
  { 3, IN, false, "task_register_dyld_shared_cache_image_info", "private_cache" },
  { 0, IN, false, "task_register_dyld_set_dyld_state", "task" },
  { 1, IN, false, "task_register_dyld_set_dyld_state", "dyld_state" },
  { 0, IN, false, "task_register_dyld_get_process_state", "task" },
  { 1, OUT, false, "task_register_dyld_get_process_state", "dyld_process_state" },
  { 0, IN, false, "task_map_corpse_info_64", "task" },
  { 1, IN, false, "task_map_corpse_info_64", "corspe_task" },
  { 2, OUT, false, "task_map_corpse_info_64", "kcd_addr_begin" },
  { 3, OUT, false, "task_map_corpse_info_64", "kcd_size" },
  { 0, IN, false, "check_task_access", "task_access_port" },
  { 1, IN, false, "check_task_access", "calling_pid" },
  { 2, IN, false, "check_task_access", "calling_gid" },
  { 3, IN, false, "check_task_access", "target_pid" },
  { 4, SERVERAUDITTOKEN, false, "check_task_access", "caller_cred" },
  { 0, IN, false, "find_code_signature", "task_access_port" },
  { 1, IN, false, "find_code_signature", "new_pid" },
  { 0, REQUESTPORT, false, "telemetry_notification", "telemetry_port" },
  { 1, IN, false, "telemetry_notification", "flags" },
  { 0, IN, false, "thread_terminate", "target_act" },
  { 0, IN, false, "act_get_state", "target_act" },
  { 1, IN, false, "act_get_state", "flavor" },
  { 2, OUT, true, "act_get_state", "old_state" }, // CountInOut // VARIABLE_SIZE
  { 3, INOUT, false, "act_get_state", "old_state_size" }, // Auto-generated
  { 0, IN, false, "act_set_state", "target_act" },
  { 1, IN, false, "act_set_state", "flavor" },
  { 2, IN, true, "act_set_state", "new_state" }, // VARIABLE_SIZE
  { 3, OUT, false, "act_set_state", "new_state_size" }, // Auto-generated
  { 0, IN, false, "thread_get_state", "target_act" },
  { 1, IN, false, "thread_get_state", "flavor" },
  { 2, OUT, true, "thread_get_state", "old_state" }, // CountInOut // VARIABLE_SIZE
  { 3, INOUT, false, "thread_get_state", "old_state_size" }, // Auto-generated
  { 0, IN, false, "thread_set_state", "target_act" },
  { 1, IN, false, "thread_set_state", "flavor" },
  { 2, IN, true, "thread_set_state", "new_state" }, // VARIABLE_SIZE
  { 3, OUT, false, "thread_set_state", "new_state_size" }, // Auto-generated
  { 0, IN, false, "thread_suspend", "target_act" },
  { 0, IN, false, "thread_resume", "target_act" },
  { 0, IN, false, "thread_abort", "target_act" },
  { 0, IN, false, "thread_abort_safely", "target_act" },
  { 0, IN, false, "thread_depress_abort", "thread" },
  { 0, IN, false, "thread_get_special_port", "thr_act" },
  { 1, IN, false, "thread_get_special_port", "which_port" },
  { 2, OUT, false, "thread_get_special_port", "special_port" },
  { 0, IN, false, "thread_set_special_port", "thr_act" },
  { 1, IN, false, "thread_set_special_port", "which_port" },
  { 2, IN, false, "thread_set_special_port", "special_port" },
  { 0, IN, false, "thread_info", "target_act" },
  { 1, IN, false, "thread_info", "flavor" },
  { 2, OUT, true, "thread_info", "thread_info_out" }, // CountInOut // VARIABLE_SIZE
  { 3, INOUT, false, "thread_info", "thread_info_out_size" }, // Auto-generated
  { 0, IN, false, "thread_set_exception_ports", "thread" },
  { 1, IN, false, "thread_set_exception_ports", "exception_mask" },
  { 2, IN, false, "thread_set_exception_ports", "new_port" },
  { 3, IN, false, "thread_set_exception_ports", "behavior" },
  { 4, IN, false, "thread_set_exception_ports", "new_flavor" },
  { 0, IN, false, "thread_get_exception_ports", "thread" },
  { 1, IN, false, "thread_get_exception_ports", "exception_mask" },
  { 2, OUT, true, "thread_get_exception_ports", "masks" }, // VARIABLE_SIZE
  { 3, OUT, false, "thread_get_exception_ports", "masks_size" }, // Auto-generated
  { 4, OUT, true, "thread_get_exception_ports", "old_handlers" }, // SameCount // VARIABLE_SIZE
  { 5, OUT, true, "thread_get_exception_ports", "old_behaviors" }, // SameCount // VARIABLE_SIZE
  { 6, OUT, true, "thread_get_exception_ports", "old_flavors" }, // SameCount // VARIABLE_SIZE
  { 0, IN, false, "thread_swap_exception_ports", "thread" },
  { 1, IN, false, "thread_swap_exception_ports", "exception_mask" },
  { 2, IN, false, "thread_swap_exception_ports", "new_port" },
  { 3, IN, false, "thread_swap_exception_ports", "behavior" },
  { 4, IN, false, "thread_swap_exception_ports", "new_flavor" },
  { 5, OUT, true, "thread_swap_exception_ports", "masks" }, // VARIABLE_SIZE
  { 6, OUT, false, "thread_swap_exception_ports", "masks_size" }, // Auto-generated
  { 7, OUT, true, "thread_swap_exception_ports", "old_handlers" }, // SameCount // VARIABLE_SIZE
  { 8, OUT, true, "thread_swap_exception_ports", "old_behaviors" }, // SameCount // VARIABLE_SIZE
  { 9, OUT, true, "thread_swap_exception_ports", "old_flavors" }, // SameCount // VARIABLE_SIZE
  { 0, IN, false, "thread_policy", "thr_act" },
  { 1, IN, false, "thread_policy", "policy" },
  { 2, IN, true, "thread_policy", "base" }, // VARIABLE_SIZE
  { 3, OUT, false, "thread_policy", "base_size" }, // Auto-generated
  { 4, IN, false, "thread_policy", "set_limit" },
  { 0, IN, false, "thread_policy_set", "thread" },
  { 1, IN, false, "thread_policy_set", "flavor" },
  { 2, IN, true, "thread_policy_set", "policy_info" }, // VARIABLE_SIZE
  { 3, OUT, false, "thread_policy_set", "policy_info_size" }, // Auto-generated
  { 0, IN, false, "thread_policy_get", "thread" },
  { 1, IN, false, "thread_policy_get", "flavor" },
  { 2, OUT, true, "thread_policy_get", "policy_info" }, // CountInOut // VARIABLE_SIZE
  { 3, INOUT, false, "thread_policy_get", "policy_info_size" }, // Auto-generated
  { 4, INOUT, false, "thread_policy_get", "get_default" },
  { 0, IN, false, "thread_sample", "thread" },
  { 1, IN, false, "thread_sample", "reply" },
  { 0, IN, false, "etap_trace_thread", "target_act" },
  { 1, IN, false, "etap_trace_thread", "trace_status" },
  { 0, IN, false, "thread_assign", "thread" },
  { 1, IN, false, "thread_assign", "new_set" },
  { 0, IN, false, "thread_assign_default", "thread" },
  { 0, IN, false, "thread_get_assignment", "thread" },
  { 1, OUT, false, "thread_get_assignment", "assigned_set" },
  { 0, IN, false, "thread_set_policy", "thr_act" },
  { 1, IN, false, "thread_set_policy", "pset" },
  { 2, IN, false, "thread_set_policy", "policy" },
  { 3, IN, true, "thread_set_policy", "base" }, // VARIABLE_SIZE
  { 4, OUT, false, "thread_set_policy", "base_size" }, // Auto-generated
  { 5, IN, true, "thread_set_policy", "limit" }, // VARIABLE_SIZE
  { 6, OUT, false, "thread_set_policy", "limit_size" }, // Auto-generated
  { 0, IN, false, "thread_get_mach_voucher", "thr_act" },
  { 1, IN, false, "thread_get_mach_voucher", "which" },
  { 2, OUT, false, "thread_get_mach_voucher", "voucher" },
  { 0, IN, false, "thread_set_mach_voucher", "thr_act" },
  { 1, IN, false, "thread_set_mach_voucher", "voucher" },
  { 0, IN, false, "thread_swap_mach_voucher", "thr_act" },
  { 1, IN, false, "thread_swap_mach_voucher", "new_voucher" },
  { 2, INOUT, false, "thread_swap_mach_voucher", "old_voucher" },
  { 0, IN, false, "vm_region", "target_task" },
  { 1, INOUT, false, "vm_region", "address" },
  { 2, OUT, false, "vm_region", "size" },
  { 3, IN, false, "vm_region", "flavor" },
  { 4, OUT, true, "vm_region", "info" }, // CountInOut // VARIABLE_SIZE
  { 5, INOUT, false, "vm_region", "info_size" }, // Auto-generated
  { 6, OUT, false, "vm_region", "object_name" },
  { 0, IN, false, "vm_allocate", "target_task" },
  { 1, INOUT, false, "vm_allocate", "address" },
  { 2, IN, false, "vm_allocate", "size" },
  { 3, IN, false, "vm_allocate", "flags" },
  { 0, IN, false, "vm_deallocate", "target_task" },
  { 1, IN, false, "vm_deallocate", "address" },
  { 2, IN, false, "vm_deallocate", "size" },
  { 0, IN, false, "vm_protect", "target_task" },
  { 1, IN, false, "vm_protect", "address" },
  { 2, IN, false, "vm_protect", "size" },
  { 3, IN, false, "vm_protect", "set_maximum" },
  { 4, IN, false, "vm_protect", "new_protection" },
  { 0, IN, false, "vm_inherit", "target_task" },
  { 1, IN, false, "vm_inherit", "address" },
  { 2, IN, false, "vm_inherit", "size" },
  { 3, IN, false, "vm_inherit", "new_inheritance" },
  { 0, IN, false, "vm_read", "target_task" },
  { 1, IN, false, "vm_read", "address" },
  { 2, IN, false, "vm_read", "size" },
  { 3, OUT, true, "vm_read", "data" }, // UNLIMITED_SIZE
  { 4, OUT, false, "vm_read", "data_size" }, // Auto-generated
  { 0, IN, false, "vm_read_list", "target_task" },
  { 1, INOUT, true, "vm_read_list", "data_list" }, // FIXED_SIZE
  { 2, IN, false, "vm_read_list", "count" },
  { 0, IN, false, "vm_write", "target_task" },
  { 1, IN, false, "vm_write", "address" },
  { 2, IN, true, "vm_write", "data" }, // UNLIMITED_SIZE
  { 3, OUT, false, "vm_write", "data_size" }, // Auto-generated
  { 0, IN, false, "vm_copy", "target_task" },
  { 1, IN, false, "vm_copy", "source_address" },
  { 2, IN, false, "vm_copy", "size" },
  { 3, IN, false, "vm_copy", "dest_address" },
  { 0, IN, false, "vm_read_overwrite", "target_task" },
  { 1, IN, false, "vm_read_overwrite", "address" },
  { 2, IN, false, "vm_read_overwrite", "size" },
  { 3, IN, false, "vm_read_overwrite", "data" },
  { 4, OUT, false, "vm_read_overwrite", "outsize" },
  { 0, IN, false, "vm_msync", "target_task" },
  { 1, IN, false, "vm_msync", "address" },
  { 2, IN, false, "vm_msync", "size" },
  { 3, IN, false, "vm_msync", "sync_flags" },
  { 0, IN, false, "vm_behavior_set", "target_task" },
  { 1, IN, false, "vm_behavior_set", "address" },
  { 2, IN, false, "vm_behavior_set", "size" },
  { 3, IN, false, "vm_behavior_set", "new_behavior" },
  { 0, IN, false, "vm_map", "target_task" },
  { 1, INOUT, false, "vm_map", "address" },
  { 2, IN, false, "vm_map", "size" },
  { 3, IN, false, "vm_map", "mask" },
  { 4, IN, false, "vm_map", "flags" },
  { 5, IN, false, "vm_map", "object" },
  { 6, IN, false, "vm_map", "offset" },
  { 7, IN, false, "vm_map", "copy" },
  { 8, IN, false, "vm_map", "cur_protection" },
  { 9, IN, false, "vm_map", "max_protection" },
  { 10, IN, false, "vm_map", "inheritance" },
  { 0, IN, false, "vm_machine_attribute", "target_task" },
  { 1, IN, false, "vm_machine_attribute", "address" },
  { 2, IN, false, "vm_machine_attribute", "size" },
  { 3, IN, false, "vm_machine_attribute", "attribute" },
  { 4, INOUT, false, "vm_machine_attribute", "value" },
  { 0, IN, false, "vm_remap", "target_task" },
  { 1, INOUT, false, "vm_remap", "target_address" },
  { 2, IN, false, "vm_remap", "size" },
  { 3, IN, false, "vm_remap", "mask" },
  { 4, IN, false, "vm_remap", "flags" },
  { 5, IN, false, "vm_remap", "src_task" },
  { 6, IN, false, "vm_remap", "src_address" },
  { 7, IN, false, "vm_remap", "copy" },
  { 8, OUT, false, "vm_remap", "cur_protection" },
  { 9, OUT, false, "vm_remap", "max_protection" },
  { 10, IN, false, "vm_remap", "inheritance" },
  { 0, IN, false, "task_wire", "target_task" },
  { 1, IN, false, "task_wire", "must_wire" },
  { 0, IN, false, "vm_map_page_query", "target_map" },
  { 1, IN, false, "vm_map_page_query", "offset" },
  { 2, OUT, false, "vm_map_page_query", "disposition" },
  { 3, OUT, false, "vm_map_page_query", "ref_count" },
  { 0, IN, false, "mach_vm_region_info", "task" },
  { 1, IN, false, "mach_vm_region_info", "address" },
  { 2, OUT, false, "mach_vm_region_info", "region" },
  { 3, OUT, true, "mach_vm_region_info", "objects" }, // UNLIMITED_SIZE
  { 4, OUT, false, "mach_vm_region_info", "objects_size" }, // Auto-generated
  { 0, IN, false, "vm_mapped_pages_info", "task" },
  { 1, OUT, true, "vm_mapped_pages_info", "pages" }, // UNLIMITED_SIZE
  { 2, OUT, false, "vm_mapped_pages_info", "pages_size" }, // Auto-generated
  { 0, IN, false, "vm_region_recurse", "target_task" },
  { 1, INOUT, false, "vm_region_recurse", "address" },
  { 2, OUT, false, "vm_region_recurse", "size" },
  { 3, INOUT, false, "vm_region_recurse", "nesting_depth" },
  { 4, OUT, true, "vm_region_recurse", "info" }, // CountInOut // VARIABLE_SIZE
  { 5, INOUT, false, "vm_region_recurse", "info_size" }, // Auto-generated
  { 0, IN, false, "vm_region_recurse_64", "target_task" },
  { 1, INOUT, false, "vm_region_recurse_64", "address" },
  { 2, OUT, false, "vm_region_recurse_64", "size" },
  { 3, INOUT, false, "vm_region_recurse_64", "nesting_depth" },
  { 4, OUT, true, "vm_region_recurse_64", "info" }, // CountInOut // VARIABLE_SIZE
  { 5, INOUT, false, "vm_region_recurse_64", "info_size" }, // Auto-generated
  { 0, IN, false, "mach_vm_region_info_64", "task" },
  { 1, IN, false, "mach_vm_region_info_64", "address" },
  { 2, OUT, false, "mach_vm_region_info_64", "region" },
  { 3, OUT, true, "mach_vm_region_info_64", "objects" }, // UNLIMITED_SIZE
  { 4, OUT, false, "mach_vm_region_info_64", "objects_size" }, // Auto-generated
  { 0, IN, false, "vm_region_64", "target_task" },
  { 1, INOUT, false, "vm_region_64", "address" },
  { 2, OUT, false, "vm_region_64", "size" },
  { 3, IN, false, "vm_region_64", "flavor" },
  { 4, OUT, true, "vm_region_64", "info" }, // CountInOut // VARIABLE_SIZE
  { 5, INOUT, false, "vm_region_64", "info_size" }, // Auto-generated
  { 6, OUT, false, "vm_region_64", "object_name" },
  { 0, IN, false, "mach_make_memory_entry_64", "target_task" },
  { 1, INOUT, false, "mach_make_memory_entry_64", "size" },
  { 2, IN, false, "mach_make_memory_entry_64", "offset" },
  { 3, IN, false, "mach_make_memory_entry_64", "permission" },
  { 4, OUT, false, "mach_make_memory_entry_64", "object_handle" },
  { 5, IN, false, "mach_make_memory_entry_64", "parent_entry" },
  { 0, IN, false, "vm_map_64", "target_task" },
  { 1, INOUT, false, "vm_map_64", "address" },
  { 2, IN, false, "vm_map_64", "size" },
  { 3, IN, false, "vm_map_64", "mask" },
  { 4, IN, false, "vm_map_64", "flags" },
  { 5, IN, false, "vm_map_64", "object" },
  { 6, IN, false, "vm_map_64", "offset" },
  { 7, IN, false, "vm_map_64", "copy" },
  { 8, IN, false, "vm_map_64", "cur_protection" },
  { 9, IN, false, "vm_map_64", "max_protection" },
  { 10, IN, false, "vm_map_64", "inheritance" },
  { 0, IN, false, "vm_purgable_control", "target_task" },
  { 1, IN, false, "vm_purgable_control", "address" },
  { 2, IN, false, "vm_purgable_control", "control" },
  { 3, INOUT, false, "vm_purgable_control", "state" },
  { 0, IN, false, "UNDAlertCompletedWithResult_rpc", "reply" },
  { 1, IN, false, "UNDAlertCompletedWithResult_rpc", "result" },
  { 2, IN, true, "UNDAlertCompletedWithResult_rpc", "data" }, // UNLIMITED_SIZE
  { 3, OUT, false, "UNDAlertCompletedWithResult_rpc", "data_size" }, // Auto-generated
  { 0, IN, false, "UNDNotificationCreated_rpc", "reply" },
  { 1, IN, false, "UNDNotificationCreated_rpc", "userLandNotificationKey" },
  { 0, IN, false, "UNDExecute_rpc", "server" },
  { 1, IN, false, "UNDExecute_rpc", "executionPath" },
  { 2, IN, false, "UNDExecute_rpc", "uid" },
  { 3, IN, false, "UNDExecute_rpc", "gid" },
  { 0, IN, false, "UNDDisplayNoticeFromBundle_rpc", "server" },
  { 1, IN, false, "UNDDisplayNoticeFromBundle_rpc", "reply" },
  { 2, IN, false, "UNDDisplayNoticeFromBundle_rpc", "bundlePath" },
  { 3, IN, false, "UNDDisplayNoticeFromBundle_rpc", "fileName" },
  { 4, IN, false, "UNDDisplayNoticeFromBundle_rpc", "fileExtension" },
  { 5, IN, false, "UNDDisplayNoticeFromBundle_rpc", "messageKey" },
  { 0, IN, false, "UNDDisplayAlertFromBundle_rpc", "server" },
  { 1, IN, false, "UNDDisplayAlertFromBundle_rpc", "reply" },
  { 2, IN, false, "UNDDisplayAlertFromBundle_rpc", "bundlePath" },
  { 3, IN, false, "UNDDisplayAlertFromBundle_rpc", "fileName" },
  { 4, IN, false, "UNDDisplayAlertFromBundle_rpc", "fileExtension" },
  { 5, IN, false, "UNDDisplayAlertFromBundle_rpc", "messageKey" },
  { 0, IN, false, "UNDDisplayCustomFromBundle_rpc", "server" },
  { 1, IN, false, "UNDDisplayCustomFromBundle_rpc", "reply" },
  { 2, IN, false, "UNDDisplayCustomFromBundle_rpc", "bundlePath" },
  { 3, IN, false, "UNDDisplayCustomFromBundle_rpc", "fileName" },
  { 4, IN, false, "UNDDisplayCustomFromBundle_rpc", "fileExtension" },
  { 5, IN, false, "UNDDisplayCustomFromBundle_rpc", "messageKey" },
  { 6, IN, false, "UNDDisplayCustomFromBundle_rpc", "tokenKey" },
  { 0, IN, false, "UNDCancelNotification_rpc", "server" },
  { 1, IN, false, "UNDCancelNotification_rpc", "userLandNotificationKey" },
  { 0, IN, false, "UNDDisplayNoticeSimple_rpc", "server" },
  { 1, IN, false, "UNDDisplayNoticeSimple_rpc", "rpctimeout" },
  { 2, IN, false, "UNDDisplayNoticeSimple_rpc", "flags" },
  { 3, IN, false, "UNDDisplayNoticeSimple_rpc", "iconPath" },
  { 4, IN, false, "UNDDisplayNoticeSimple_rpc", "soundPath" },
  { 5, IN, false, "UNDDisplayNoticeSimple_rpc", "localizationPath" },
  { 6, IN, false, "UNDDisplayNoticeSimple_rpc", "header" },
  { 7, IN, false, "UNDDisplayNoticeSimple_rpc", "message" },
  { 8, IN, false, "UNDDisplayNoticeSimple_rpc", "defaultButtonTitle" },
  { 0, IN, false, "UNDDisplayAlertSimple_rpc", "server" },
  { 1, IN, false, "UNDDisplayAlertSimple_rpc", "rpctimeout" },
  { 2, IN, false, "UNDDisplayAlertSimple_rpc", "flags" },
  { 3, IN, false, "UNDDisplayAlertSimple_rpc", "iconPath" },
  { 4, IN, false, "UNDDisplayAlertSimple_rpc", "soundPath" },
  { 5, IN, false, "UNDDisplayAlertSimple_rpc", "localizationPath" },
  { 6, IN, false, "UNDDisplayAlertSimple_rpc", "header" },
  { 7, IN, false, "UNDDisplayAlertSimple_rpc", "message" },
  { 8, IN, false, "UNDDisplayAlertSimple_rpc", "defaultButtonTitle" },
  { 9, IN, false, "UNDDisplayAlertSimple_rpc", "alternateButtonTitle" },
  { 10, IN, false, "UNDDisplayAlertSimple_rpc", "otherButtonTitle" },
  { 11, OUT, false, "UNDDisplayAlertSimple_rpc", "response" },
  { 0, IN, false, "netname_check_in", "server_port" },
  { 1, IN, false, "netname_check_in", "port_name" },
  { 2, IN, false, "netname_check_in", "signature" },
  { 3, IN, false, "netname_check_in", "port_id" },
  { 0, IN, false, "netname_look_up", "server_port" },
  { 1, IN, false, "netname_look_up", "host_name" },
  { 2, IN, false, "netname_look_up", "port_name" },
  { 3, OUT, false, "netname_look_up", "port_id" },
  { 0, IN, false, "netname_check_out", "server_port" },
  { 1, IN, false, "netname_check_out", "port_name" },
  { 2, IN, false, "netname_check_out", "signature" },
  { 0, IN, false, "netname_version", "server_port" },
  { 1, OUT, false, "netname_version", "version" },
  { 0, REQUESTPORT, false, "coalition_notification", "coalition_port" },
  { 1, IN, false, "coalition_notification", "id" },
  { 2, IN, false, "coalition_notification", "flags" },
  { 0, IN, false, "ktrace_background_available", "ktrace_background_port" },
  { 0, IN, false, "memory_object_init", "memory_object" },
  { 1, IN, false, "memory_object_init", "memory_control" },
  { 2, IN, false, "memory_object_init", "memory_object_page_size" },
  { 0, IN, false, "memory_object_terminate", "memory_object" },
  { 0, IN, false, "memory_object_data_request", "memory_object" },
  { 1, IN, false, "memory_object_data_request", "offset" },
  { 2, IN, false, "memory_object_data_request", "length" },
  { 3, IN, false, "memory_object_data_request", "desired_access" },
  { 4, IN, true, "memory_object_data_request", "fault_info" }, // FIXED_SIZE
  { 0, IN, false, "memory_object_data_return", "memory_object" },
  { 1, IN, false, "memory_object_data_return", "offset" },
  { 2, IN, false, "memory_object_data_return", "size" },
  { 3, OUT, false, "memory_object_data_return", "resid_offset" },
  { 4, OUT, false, "memory_object_data_return", "io_error" },
  { 5, IN, false, "memory_object_data_return", "dirty" },
  { 6, IN, false, "memory_object_data_return", "kernel_copy" },
  { 7, IN, false, "memory_object_data_return", "upl_flags" },
  { 0, IN, false, "memory_object_data_initialize", "memory_object" },
  { 1, IN, false, "memory_object_data_initialize", "offset" },
  { 2, IN, false, "memory_object_data_initialize", "size" },
  { 0, IN, false, "memory_object_data_unlock", "memory_object" },
  { 1, IN, false, "memory_object_data_unlock", "offset" },
  { 2, IN, false, "memory_object_data_unlock", "size" },
  { 3, IN, false, "memory_object_data_unlock", "desired_access" },
  { 0, IN, false, "memory_object_synchronize", "memory_object" },
  { 1, IN, false, "memory_object_synchronize", "offset" },
  { 2, IN, false, "memory_object_synchronize", "size" },
  { 3, IN, false, "memory_object_synchronize", "sync_flags" },
  { 0, IN, false, "memory_object_map", "memory_object" },
  { 1, IN, false, "memory_object_map", "prot" },
  { 0, IN, false, "memory_object_last_unmap", "memory_object" },
  { 0, IN, false, "memory_object_data_reclaim", "memory_object" },
  { 1, IN, false, "memory_object_data_reclaim", "reclaim_backing_store" },
  { 0, IN, false, "memory_object_get_attributes", "memory_control" },
  { 1, IN, false, "memory_object_get_attributes", "flavor" },
  { 2, OUT, true, "memory_object_get_attributes", "attributes" }, // CountInOut // VARIABLE_SIZE
  { 3, INOUT, false, "memory_object_get_attributes", "attributes_size" }, // Auto-generated
  { 0, IN, false, "memory_object_change_attributes", "memory_control" },
  { 1, IN, false, "memory_object_change_attributes", "flavor" },
  { 2, IN, true, "memory_object_change_attributes", "attributes" }, // VARIABLE_SIZE
  { 3, OUT, false, "memory_object_change_attributes", "attributes_size" }, // Auto-generated
  { 0, IN, false, "memory_object_synchronize_completed", "memory_control" },
  { 1, IN, false, "memory_object_synchronize_completed", "offset" },
  { 2, IN, false, "memory_object_synchronize_completed", "length" },
  { 0, IN, false, "memory_object_lock_request", "memory_control" },
  { 1, IN, false, "memory_object_lock_request", "offset" },
  { 2, IN, false, "memory_object_lock_request", "size" },
  { 3, OUT, false, "memory_object_lock_request", "resid_offset" },
  { 4, OUT, false, "memory_object_lock_request", "io_errno" },
  { 5, IN, false, "memory_object_lock_request", "should_return" },
  { 6, IN, false, "memory_object_lock_request", "flags" },
  { 7, IN, false, "memory_object_lock_request", "lock_value" },
  { 0, IN, false, "memory_object_destroy", "memory_control" },
  { 1, IN, false, "memory_object_destroy", "reason" },
  { 0, IN, false, "memory_object_upl_request", "memory_control" },
  { 1, IN, false, "memory_object_upl_request", "offset" },
  { 2, IN, false, "memory_object_upl_request", "size" },
  { 3, OUT, false, "memory_object_upl_request", "upl" },
  { 4, OUT, false, "memory_object_upl_request", "page_list" }, // CountInOut
  { 5, IN, false, "memory_object_upl_request", "cntrl_flags" },
  { 0, IN, false, "memory_object_super_upl_request", "memory_control" },
  { 1, IN, false, "memory_object_super_upl_request", "offset" },
  { 2, IN, false, "memory_object_super_upl_request", "size" },
  { 3, IN, false, "memory_object_super_upl_request", "super_size" },
  { 4, OUT, false, "memory_object_super_upl_request", "upl" },
  { 5, OUT, false, "memory_object_super_upl_request", "page_list" }, // CountInOut
  { 6, IN, false, "memory_object_super_upl_request", "cntrl_flags" },
  { 0, IN, false, "memory_object_cluster_size", "control" },
  { 1, OUT, false, "memory_object_cluster_size", "start" },
  { 2, OUT, false, "memory_object_cluster_size", "length" },
  { 3, OUT, false, "memory_object_cluster_size", "io_streaming" },
  { 4, IN, true, "memory_object_cluster_size", "fault_info" }, // FIXED_SIZE
  { 0, IN, false, "memory_object_page_op", "memory_control" },
  { 1, IN, false, "memory_object_page_op", "offset" },
  { 2, IN, false, "memory_object_page_op", "ops" },
  { 3, OUT, false, "memory_object_page_op", "phys_entry" },
  { 4, OUT, false, "memory_object_page_op", "flags" },
  { 0, IN, false, "memory_object_recover_named", "memory_control" },
  { 1, IN, false, "memory_object_recover_named", "wait_on_terminating" },
  { 0, IN, false, "memory_object_release_name", "memory_control" },
  { 1, IN, false, "memory_object_release_name", "flags" },
  { 0, IN, false, "memory_object_range_op", "memory_control" },
  { 1, IN, false, "memory_object_range_op", "offset_beg" },
  { 2, IN, false, "memory_object_range_op", "offset_end" },
  { 3, IN, false, "memory_object_range_op", "ops" },
  { 4, OUT, false, "memory_object_range_op", "range" },
  { 0, IN, false, "memory_object_create", "default_memory_manager" },
  { 1, IN, false, "memory_object_create", "new_memory_object_size" },
  { 2, OUT, false, "memory_object_create", "new_memory_object" },
  { 0, IN, false, "samples", "reply_port" },
  { 1, IN, true, "samples", "samples" }, // VARIABLE_SIZE
  { 2, OUT, false, "samples", "samples_size" }, // Auto-generated
  { 0, IN, false, "notices", "reply_port" },
  { 1, IN, true, "notices", "samples" }, // VARIABLE_SIZE
  { 2, OUT, false, "notices", "samples_size" }, // Auto-generated
  { 3, MSGOPTION, false, "notices", "options" },
  { 0, IN, false, "cpu_usage_violation", "receiver" },
  { 1, IN, true, "cpu_usage_violation", "procname" }, // FIXED_SIZE
  { 2, IN, false, "cpu_usage_violation", "pid" },
  { 3, IN, true, "cpu_usage_violation", "killed_proc_path" }, // FIXED_SIZE
  { 4, IN, false, "cpu_usage_violation", "timestamp" },
  { 5, IN, false, "cpu_usage_violation", "observed_cpu_nsecs" },
  { 6, IN, false, "cpu_usage_violation", "observation_nsecs" },
  { 7, IN, false, "cpu_usage_violation", "cpu_nsecs_allowed" },
  { 8, IN, false, "cpu_usage_violation", "limit_window_nsecs" },
  { 9, IN, false, "cpu_usage_violation", "flags" },
  { 0, IN, false, "cpu_wakes_violation", "receiver" },
  { 1, IN, true, "cpu_wakes_violation", "procname" }, // FIXED_SIZE
  { 2, IN, false, "cpu_wakes_violation", "pid" },
  { 3, IN, true, "cpu_wakes_violation", "killed_proc_path" }, // FIXED_SIZE
  { 4, IN, false, "cpu_wakes_violation", "timestamp" },
  { 5, IN, false, "cpu_wakes_violation", "observed_cpu_wakes" },
  { 6, IN, false, "cpu_wakes_violation", "observation_nsecs" },
  { 7, IN, false, "cpu_wakes_violation", "cpu_wakes_allowed" },
  { 8, IN, false, "cpu_wakes_violation", "limit_window_nsecs" },
  { 9, IN, false, "cpu_wakes_violation", "flags" },
  { 0, IN, false, "disk_writes_violation", "receiver" },
  { 1, IN, true, "disk_writes_violation", "procname" }, // FIXED_SIZE
  { 2, IN, false, "disk_writes_violation", "pid" },
  { 3, IN, true, "disk_writes_violation", "killed_proc_path" }, // FIXED_SIZE
  { 4, IN, false, "disk_writes_violation", "timestamp" },
  { 5, IN, false, "disk_writes_violation", "observed_bytes_dirtied" },
  { 6, IN, false, "disk_writes_violation", "observation_nsecs" },
  { 7, IN, false, "disk_writes_violation", "bytes_dirtied_allowed" },
  { 8, IN, false, "disk_writes_violation", "limit_window_nsecs" },
  { 9, IN, false, "disk_writes_violation", "flags" },
  { 0, IN, false, "semaphore_signal", "semaphore" },
  { 0, IN, false, "semaphore_signal_all", "semaphore" },
  { 0, IN, false, "semaphore_wait", "semaphore" },
  { 0, IN, false, "semaphore_signal_thread", "semaphore" },
  { 1, IN, false, "semaphore_signal_thread", "thread" },
  { 0, IN, false, "semaphore_timedwait", "semaphore" },
  { 1, IN, false, "semaphore_timedwait", "wait_time" },
  { 0, IN, false, "semaphore_wait_signal", "wait_semaphore" },
  { 1, IN, false, "semaphore_wait_signal", "signal_semaphore" },
  { 0, IN, false, "semaphore_timedwait_signal", "wait_semaphore" },
  { 1, IN, false, "semaphore_timedwait_signal", "signal_semaphore" },
  { 2, IN, false, "semaphore_timedwait_signal", "wait_time" },
  { 0, IN, false, "sysdiagnose_notification", "sysdiagnose_port" },
  { 1, IN, false, "sysdiagnose_notification", "flags" },
  { 0, IN, false, "upl_abort", "upl_object" },
  { 1, IN, false, "upl_abort", "abort_cond" },
  { 0, IN, false, "upl_abort_range", "upl_object" },
  { 1, IN, false, "upl_abort_range", "offset" },
  { 2, IN, false, "upl_abort_range", "size" },
  { 3, IN, false, "upl_abort_range", "abort_cond" },
  { 4, OUT, false, "upl_abort_range", "empty" },
  { 0, IN, false, "upl_commit", "upl_object" },
  { 1, IN, false, "upl_commit", "page_list" },
  { 0, IN, false, "upl_commit_range", "upl_object" },
  { 1, IN, false, "upl_commit_range", "offset" },
  { 2, IN, false, "upl_commit_range", "size" },
  { 3, IN, false, "upl_commit_range", "cntrl_flags" },
  { 4, IN, false, "upl_commit_range", "page_list" },
  { 5, OUT, false, "upl_commit_range", "empty" },
  { 0, IN, false, "region", "target_task" },
  { 1, INOUT, false, "region", "address" },
  { 2, OUT, false, "region", "size" },
  { 3, IN, false, "region", "flavor" },
  { 4, OUT, true, "region", "info" }, // CountInOut // VARIABLE_SIZE
  { 5, INOUT, false, "region", "info_size" }, // Auto-generated
  { 6, OUT, false, "region", "object_name" },
  { 0, IN, false, "allocate", "target_task" },
  { 1, INOUT, false, "allocate", "address" },
  { 2, IN, false, "allocate", "size" },
  { 3, IN, false, "allocate", "flags" },
  { 0, IN, false, "deallocate", "target_task" },
  { 1, IN, false, "deallocate", "address" },
  { 2, IN, false, "deallocate", "size" },
  { 0, IN, false, "protect", "target_task" },
  { 1, IN, false, "protect", "address" },
  { 2, IN, false, "protect", "size" },
  { 3, IN, false, "protect", "set_maximum" },
  { 4, IN, false, "protect", "new_protection" },
  { 0, IN, false, "inherit", "target_task" },
  { 1, IN, false, "inherit", "address" },
  { 2, IN, false, "inherit", "size" },
  { 3, IN, false, "inherit", "new_inheritance" },
  { 0, IN, false, "read", "target_task" },
  { 1, IN, false, "read", "address" },
  { 2, IN, false, "read", "size" },
  { 3, OUT, true, "read", "data" }, // UNLIMITED_SIZE
  { 4, OUT, false, "read", "data_size" }, // Auto-generated
  { 0, IN, false, "read_list", "target_task" },
  { 1, INOUT, true, "read_list", "data_list" }, // FIXED_SIZE
  { 2, IN, false, "read_list", "count" },
  { 0, IN, false, "write", "target_task" },
  { 1, IN, false, "write", "address" },
  { 2, IN, true, "write", "data" }, // UNLIMITED_SIZE
  { 3, OUT, false, "write", "data_size" }, // Auto-generated
  { 0, IN, false, "copy", "target_task" },
  { 1, IN, false, "copy", "source_address" },
  { 2, IN, false, "copy", "size" },
  { 3, IN, false, "copy", "dest_address" },
  { 0, IN, false, "read_overwrite", "target_task" },
  { 1, IN, false, "read_overwrite", "address" },
  { 2, IN, false, "read_overwrite", "size" },
  { 3, IN, false, "read_overwrite", "data" },
  { 4, OUT, false, "read_overwrite", "outsize" },
  { 0, IN, false, "msync", "target_task" },
  { 1, IN, false, "msync", "address" },
  { 2, IN, false, "msync", "size" },
  { 3, IN, false, "msync", "sync_flags" },
  { 0, IN, false, "behavior_set", "target_task" },
  { 1, IN, false, "behavior_set", "address" },
  { 2, IN, false, "behavior_set", "size" },
  { 3, IN, false, "behavior_set", "new_behavior" },
  { 0, IN, false, "map", "target_task" },
  { 1, INOUT, false, "map", "address" },
  { 2, IN, false, "map", "size" },
  { 3, IN, false, "map", "mask" },
  { 4, IN, false, "map", "flags" },
  { 5, IN, false, "map", "object" },
  { 6, IN, false, "map", "offset" },
  { 7, IN, false, "map", "copy" },
  { 8, IN, false, "map", "cur_protection" },
  { 9, IN, false, "map", "max_protection" },
  { 10, IN, false, "map", "inheritance" },
  { 0, IN, false, "machine_attribute", "target_task" },
  { 1, IN, false, "machine_attribute", "address" },
  { 2, IN, false, "machine_attribute", "size" },
  { 3, IN, false, "machine_attribute", "attribute" },
  { 4, INOUT, false, "machine_attribute", "value" },
  { 0, IN, false, "remap", "target_task" },
  { 1, INOUT, false, "remap", "target_address" },
  { 2, IN, false, "remap", "size" },
  { 3, IN, false, "remap", "mask" },
  { 4, IN, false, "remap", "anywhere" },
  { 5, IN, false, "remap", "src_task" },
  { 6, IN, false, "remap", "src_address" },
  { 7, IN, false, "remap", "copy" },
  { 8, OUT, false, "remap", "cur_protection" },
  { 9, OUT, false, "remap", "max_protection" },
  { 10, IN, false, "remap", "inheritance" },
  { 0, IN, false, "_task_wire", "target_task" },
  { 1, IN, false, "_task_wire", "must_wire" },
  { 0, IN, false, "make_memory_entry", "target_task" },
  { 1, INOUT, false, "make_memory_entry", "size" },
  { 2, IN, false, "make_memory_entry", "offset" },
  { 3, IN, false, "make_memory_entry", "permission" },
  { 4, OUT, false, "make_memory_entry", "object_handle" },
  { 5, IN, false, "make_memory_entry", "parent_entry" },
  { 0, IN, false, "map_page_query", "target_map" },
  { 1, IN, false, "map_page_query", "offset" },
  { 2, OUT, false, "map_page_query", "disposition" },
  { 3, OUT, false, "map_page_query", "ref_count" },
  { 0, IN, false, "region_info", "task" },
  { 1, IN, false, "region_info", "address" },
  { 2, OUT, false, "region_info", "region" },
  { 3, OUT, true, "region_info", "objects" }, // UNLIMITED_SIZE
  { 4, OUT, false, "region_info", "objects_size" }, // Auto-generated
  { 0, IN, false, "mapped_pages_info", "task" },
  { 1, OUT, true, "mapped_pages_info", "pages" }, // UNLIMITED_SIZE
  { 2, OUT, false, "mapped_pages_info", "pages_size" }, // Auto-generated
  { 0, IN, false, "region_recurse", "target_task" },
  { 1, INOUT, false, "region_recurse", "address" },
  { 2, OUT, false, "region_recurse", "size" },
  { 3, INOUT, false, "region_recurse", "nesting_depth" },
  { 4, OUT, true, "region_recurse", "info" }, // CountInOut // VARIABLE_SIZE
  { 5, INOUT, false, "region_recurse", "info_size" }, // Auto-generated
  { 0, IN, false, "region_recurse_64", "target_task" },
  { 1, INOUT, false, "region_recurse_64", "address" },
  { 2, OUT, false, "region_recurse_64", "size" },
  { 3, INOUT, false, "region_recurse_64", "nesting_depth" },
  { 4, OUT, true, "region_recurse_64", "info" }, // CountInOut // VARIABLE_SIZE
  { 5, INOUT, false, "region_recurse_64", "info_size" }, // Auto-generated
  { 0, IN, false, "region_info_64", "task" },
  { 1, IN, false, "region_info_64", "address" },
  { 2, OUT, false, "region_info_64", "region" },
  { 3, OUT, true, "region_info_64", "objects" }, // UNLIMITED_SIZE
  { 4, OUT, false, "region_info_64", "objects_size" }, // Auto-generated
  { 0, IN, false, "region_64", "target_task" },
  { 1, INOUT, false, "region_64", "address" },
  { 2, OUT, false, "region_64", "size" },
  { 3, IN, false, "region_64", "flavor" },
  { 4, OUT, true, "region_64", "info" }, // CountInOut // VARIABLE_SIZE
  { 5, INOUT, false, "region_64", "info_size" }, // Auto-generated
  { 6, OUT, false, "region_64", "object_name" },
  { 0, IN, false, "make_memory_entry_64", "target_task" },
  { 1, INOUT, false, "make_memory_entry_64", "size" },
  { 2, IN, false, "make_memory_entry_64", "offset" },
  { 3, IN, false, "make_memory_entry_64", "permission" },
  { 4, OUT, false, "make_memory_entry_64", "object_handle" },
  { 5, IN, false, "make_memory_entry_64", "parent_entry" },
  { 0, IN, false, "map_64", "target_task" },
  { 1, INOUT, false, "map_64", "address" },
  { 2, IN, false, "map_64", "size" },
  { 3, IN, false, "map_64", "mask" },
  { 4, IN, false, "map_64", "flags" },
  { 5, IN, false, "map_64", "object" },
  { 6, IN, false, "map_64", "offset" },
  { 7, IN, false, "map_64", "copy" },
  { 8, IN, false, "map_64", "cur_protection" },
  { 9, IN, false, "map_64", "max_protection" },
  { 10, IN, false, "map_64", "inheritance" },
  { 0, IN, false, "purgable_control", "target_task" },
  { 1, IN, false, "purgable_control", "address" },
  { 2, IN, false, "purgable_control", "control" },
  { 3, INOUT, false, "purgable_control", "state" },
};
